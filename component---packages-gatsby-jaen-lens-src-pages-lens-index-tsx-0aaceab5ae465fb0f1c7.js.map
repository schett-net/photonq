{"version":3,"file":"component---packages-gatsby-jaen-lens-src-pages-lens-index-tsx-0aaceab5ae465fb0f1c7.js","mappings":"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","sources":["webpack://photonq/../src/internal/proxy/create-proxy-object.ts","webpack://photonq/../src/internal/proxy/proxy.ts","webpack://photonq/../src/internal/snek-query-middleware.ts","webpack://photonq/../src/internal/proxy/is-proxied.ts","webpack://photonq/../src/internal/graphql/query-structure.ts","webpack://photonq/../src/internal/graphql/executor.ts","webpack://photonq/../src/internal/graphql/graphql-generator.ts","webpack://photonq/../src/internal/node-path-analyzer.ts","webpack://photonq/../src/internal/snek-query-operation.ts","webpack://photonq/../src/internal/node-populate.ts","webpack://photonq/../src/storage/index.ts","webpack://photonq/../src/storage/index.browser.ts","webpack://photonq/../packages/gatsby-jaen-lens/src/clients/lens/src/schema.generated.ts","webpack://photonq/../packages/gatsby-jaen-lens/src/clients/lens/src/index.ts","webpack://photonq/../src/internal/make-snek-query.ts","webpack://photonq/../packages/gatsby-jaen-lens/src/pages/lens/index.tsx","webpack://photonq/../node_modules/@chakra-ui/layout/dist/chunk-7OLJDQMT.mjs","webpack://photonq/../node_modules/@chakra-ui/table/dist/chunk-DRZNIHMG.mjs","webpack://photonq/../node_modules/@chakra-ui/table/dist/chunk-GEJVU65N.mjs","webpack://photonq/../node_modules/@chakra-ui/table/dist/chunk-GIQFRSD6.mjs","webpack://photonq/../node_modules/@chakra-ui/table/dist/chunk-J4QO5GAJ.mjs","webpack://photonq/../node_modules/@chakra-ui/table/dist/chunk-MGVPL3OH.mjs","webpack://photonq/../node_modules/@chakra-ui/table/dist/chunk-T2WCTPDH.mjs"],"sourcesContent":["type GraphQLLikeFnArgs = Record<string, any>\n\ninterface TrackedProperty {\n  name: string\n  args: {name: string; value: any}[]\n  isFnAndCalled?: boolean\n}\nexport interface TrackedProperties {\n  [key: string]: TrackedProperty\n}\nexport type TrackedObject<T extends Record<string, any> = Record<string, any>> =\n  T & {\n    $trackedProps: TrackedProperties\n    $isTracked: boolean\n  }\n\nexport function createProxyObject<T extends object>(obj: T): TrackedObject<T> {\n  const trackedProperties: TrackedProperties = {}\n\n  const proxy = new Proxy(obj, {\n    get(target, propKey: string | symbol, receiver) {\n      const propValue = Reflect.get(target, propKey, receiver)\n\n      const isTracked = (target as TrackedObject).$isTracked\n\n      if (\n        !isTracked ||\n        (typeof propKey === 'string' && propKey.startsWith('$'))\n      ) {\n        return propValue\n      }\n\n      // Only track direct properties\n      if (\n        typeof propKey === 'string' &&\n        !(propKey in trackedProperties) &&\n        (obj.hasOwnProperty(propKey) || typeof propValue === 'function')\n      ) {\n        trackedProperties[propKey] = {\n          name: propKey,\n          args: []\n        }\n      }\n\n      // Track function calls\n      if (typeof propValue === 'function') {\n        return function () {\n          const args = (arguments[0] as GraphQLLikeFnArgs) || []\n\n          const trackedArgs = Object.entries(args).map(([key, value]) => {\n            return {\n              name: key,\n              value\n            }\n          })\n\n          const result = propValue.apply(this, arguments)\n          if (typeof propKey === 'string') {\n            trackedProperties[propKey]!.isFnAndCalled = true\n\n            // Push args without duplicates\n            for (const arg of trackedArgs) {\n              const exists = trackedProperties[propKey]!.args.find(\n                a => a.name === arg.name\n              )\n              if (!exists) {\n                trackedProperties[propKey]!.args.push(arg)\n              }\n            }\n          }\n          return result\n        }\n      }\n\n      return propValue\n    }\n  })\n\n  return Object.assign(proxy, {\n    $trackedProps: trackedProperties,\n    $isTracked: true\n  })\n}\n","import {TrackedObject, createProxyObject} from './create-proxy-object'\n\n/**\n * Returns a proxy object of a class instance that intercepts property access.\n * @param MyCls The class constructor function.\n * @returns A proxy object of the class instance.\n */\nexport function proxy<T extends object>(MyCls: new () => T): TrackedObject<T> {\n  let instance: T | null = null // The instance of the class.\n  let proxyObj = createProxyObject({} as T) // The proxy object.\n\n  // Return a proxy object of the class instance.\n  return new Proxy({} as TrackedObject<T>, {\n    get(_, propKey: string | symbol, receiver) {\n      // If the class instance has not been created, create it and wrap it in a proxy object.\n      if (!instance) {\n        instance = new MyCls()\n        proxyObj = createProxyObject(instance)\n\n        // Replace the instance with the proxy object.\n        instance = proxyObj as T\n      }\n\n      // Return the property value of the class instance.\n      return Reflect.get(instance, propKey, receiver)\n    },\n    getOwnPropertyDescriptor(_, propKey: string | symbol) {\n      return Object.getOwnPropertyDescriptor(instance!, propKey)\n    },\n    ownKeys() {\n      return Reflect.ownKeys(instance!)\n    }\n  })\n}\n\nexport function arrayProxy<T extends object>(\n  MyCls: new () => T\n): TrackedObject<T>[] {\n  let proxyItem: TrackedObject<T> | undefined\n  const items: T[] = []\n\n  const proxy = new Proxy(items, {\n    get(target, propKey: string | symbol, receiver) {\n      if (!proxyItem) {\n        proxyItem = createProxyObject(new MyCls())\n      }\n\n      if (\n        !proxyItem ||\n        !proxyItem.$isTracked ||\n        typeof propKey === 'symbol' ||\n        propKey === 'length'\n      ) {\n        return Reflect.get(target, propKey, receiver)\n      }\n\n      const index = Number(propKey)\n      if (isNaN(index)) {\n        const isPrototypeFn = Array.prototype.hasOwnProperty(propKey)\n        if (isPrototypeFn) {\n          // override prototype call with other base array\n\n          return (...args: any[]) => {\n            const prototypeKey = propKey as keyof typeof Array.prototype\n\n            switch (prototypeKey) {\n              case 'concat':\n              case 'copyWithin':\n              case 'fill':\n              case 'pop':\n              case 'push':\n              case 'reverse':\n              case 'shift':\n              case 'sort':\n              case 'splice':\n              case 'unshift':\n              case 'filter':\n                Array.prototype[prototypeKey].call([proxyItem], ...args)\n                return [proxyItem]\n              case 'entries':\n              case 'flatMap':\n              case 'forEach':\n              case 'keys':\n              case 'map':\n              case 'slice':\n              case 'values':\n                return Array.prototype[prototypeKey].call([proxyItem], ...args)\n              case 'every':\n                return Array.prototype[prototypeKey].call(\n                  [proxyItem],\n                  ...args\n                ) as boolean\n              case 'find':\n              case 'findIndex':\n              case 'includes':\n              case 'indexOf':\n              case 'lastIndexOf':\n              case 'some':\n                return Array.prototype[prototypeKey].call(\n                  [proxyItem],\n                  ...args\n                ) as number | boolean\n              case 'flat':\n                return Array.prototype[prototypeKey].call(\n                  [proxyItem],\n                  ...args\n                ) as any[] // can return an array of any type\n              case 'reduce':\n              case 'reduceRight':\n                return Array.prototype[prototypeKey].call(\n                  [proxyItem],\n                  ...args\n                ) as any // can return any type\n              case 'toLocaleString':\n              case 'toString':\n                return Array.prototype[prototypeKey].call([proxyItem]) as string\n              default:\n                throw new Error(\n                  `Unsupported array prototype method: ${prototypeKey.toString()}`\n                )\n            }\n          }\n        }\n\n        return Reflect.get(target, propKey, receiver)\n      }\n\n      return proxyItem\n    }\n  })\n\n  return proxy as TrackedObject<T>[]\n}\n\nexport const fnProxy = <T extends {}>(MyCls: new () => T) => {\n  const p = proxy(MyCls)\n\n  const fn = () => {\n    return p\n  }\n\n  fn.isProxied = true\n\n  return fn\n}\n\nexport const fnArrayProxy = <T extends {}>(MyCls: new () => T) => {\n  const p = arrayProxy(MyCls)\n\n  const fn = () => {\n    return p\n  }\n\n  fn.isProxied = true\n\n  return fn\n}\n","type MaybePromise<T> = T | Promise<T>\n\nexport type SnekQueryContext = {\n  headers: Record<string, string | string[] | undefined>\n}\n\nexport interface MiddlewareFn {\n  (args: {context: SnekQueryContext}): MaybePromise<SnekQueryContext | void>\n}\n\nexport const processMiddlewares = async (\n  middlewares: MiddlewareFn[]\n): Promise<SnekQueryContext> => {\n  // loop through middlewares and call them with the previous merged context\n\n  let context: SnekQueryContext = {\n    headers: {}\n  }\n\n  for (const middleware of middlewares) {\n    const nextContext = await middleware({context})\n\n    if (nextContext) {\n      context = nextContext\n    }\n  }\n\n  return context\n}\n","export const isProxied = (target: any): boolean => {\n  if (!target) {\n    return false\n  }\n\n  if (typeof target === 'function' && target.isProxied) {\n    return true\n  }\n\n  if (Array.isArray(target) && target.length && target[0].$isTracked) {\n    return true\n  }\n\n  if (target.$isTracked) {\n    return true\n  }\n\n  return false\n}\n","interface PreventStringSerializationFn {\n  (): any\n  preventStringSerialization: true\n}\n\nexport type Field = {\n  name: QueryStructure['name']\n  args: {\n    name: string\n    value: any\n  }[]\n  fields?: Field[]\n  isNode?: boolean\n}\n\nexport class QueryStructure {\n  type: 'query' | 'mutation' | 'subscription'\n  name: string\n  // args: {name: string; type: string}[] = []\n  fields: Field[]\n\n  constructor(options: {\n    type: QueryStructure['type']\n    name: QueryStructure['name']\n  }) {\n    this.type = options.type\n    this.name = options.name\n\n    this.fields = []\n  }\n\n  addField(field: Field, path: string = '') {\n    field.args = field.args.filter(arg => {\n      // when string or object and not null or undefined\n\n      const argType = typeof arg.value\n\n      const isValid =\n        (argType === 'string' ||\n          argType === 'number' ||\n          argType === 'boolean' ||\n          argType === 'object' ||\n          (argType === 'function' && arg.value.preventStringSerialization)) &&\n        arg.value !== null &&\n        arg.value !== undefined\n\n      return isValid\n    })\n\n    if (path) {\n      const pathParts = path.split('.')\n\n      let currentPath = this.fields\n\n      for (const pathPart of pathParts) {\n        const field = currentPath.find(field => field.name === pathPart)\n\n        if (field) {\n          field.fields = field.fields || []\n\n          currentPath = field.fields\n        }\n      }\n\n      currentPath.push(field)\n    } else {\n      this.fields.push(field)\n    }\n  }\n\n  toString() {\n    const buildFieldString = (field: Field): string => {\n      const argString = field.args\n        .map(arg => {\n          const valueString =\n            typeof arg.value === 'function' &&\n            arg.value.preventStringSerialization\n              ? stringifyArgs(arg.value(), false)\n              : stringifyArgs(arg.value)\n\n          return `${arg.name}: ${valueString}`\n        })\n        .join(', ')\n\n      const fieldString = field.fields\n        ? ` {__typename ${buildFields(field.fields)}}`\n        : ''\n\n      return argString\n        ? `${field.name}(${argString})${fieldString}`\n        : `${field.name}${fieldString}`\n    }\n\n    const buildFields = (fields: Field[]): string => {\n      return fields.map(buildFieldString).join(' ')\n    }\n\n    return `${this.type} ${this.name} {__typename ${buildFields(this.fields)}}`\n  }\n}\n\nexport function doNotConvertToString(data: any): PreventStringSerializationFn {\n  const fn: PreventStringSerializationFn = () => {\n    return data\n  }\n\n  fn.preventStringSerialization = true\n\n  return fn\n}\n\ntype Enum = {\n  [key: string]: any\n}\n\nexport const asEnumKey = <T extends Enum>(e: T | null, key: keyof T) => {\n  if (e === null) {\n    return key as unknown as T[keyof T]\n  }\n\n  if (e[key] === undefined) {\n    throw new Error(`Enum key does not exist in enum: ${key.toString()}`)\n  }\n\n  return doNotConvertToString(key) as unknown as T[keyof T]\n}\n\nfunction stringifyArgs(data: any, stringifyValue: boolean = true): string {\n  if (data === null || data === undefined) {\n    return 'null'\n  }\n\n  if (typeof data === 'function' && data.preventStringSerialization) {\n    const value = data()\n    return stringifyArgs(value, false)\n  }\n\n  if (typeof data !== 'object') {\n    return stringifyValue ? JSON.stringify(data) : String(data)\n  }\n\n  if (Array.isArray(data)) {\n    const items = data\n      .map(item => stringifyArgs(item, stringifyValue))\n      .join(', ')\n    return stringifyValue ? `[${items}]` : items\n  }\n\n  if (typeof data === 'object') {\n    const props = Object.entries(data)\n      .map(([key, value]) => `${key}: ${stringifyArgs(value, stringifyValue)}`)\n      .join(', ')\n    return `{${props}}`\n  }\n\n  throw new Error(`Cannot stringify data of type ${typeof data}`)\n}\n","import {TrackedObject} from '../proxy/create-proxy-object.js'\nimport {graphqlGenerator} from './graphql-generator.js'\n\n// export class Engine {\n//   endpointURL: string\n//   registry: {\n//     [key: string]: {\n//       type: 'query' | 'mutation'\n//       node: SnekQueryNode\n//     }\n//   }\n\n//   constructor(endpointURL: string) {\n//     this.endpointURL = endpointURL\n//     this.registry = {}\n//   }\n\n//   private async executeQuery(query: string) {\n//     // send query to endpointURL\n\n//     const response = await fetch(this.endpointURL, {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify({query})\n//     })\n\n//     const data = await response.json()\n\n//     return data\n//   }\n\n//   registerOperation(\n//     type: 'query' | 'mutation',\n//     name: string,\n//     node: SnekQueryNode\n//   ) {\n//     this.registry[name] = {type, node}\n//   }\n\n//   runOperation(name: string) {\n//     const operation = this.registry[name]\n\n//     if (!operation) throw new Error(`Operation ${name} not found`)\n\n//     const {type, node} = operation\n\n//     const operationStr = graphqlGenerator({\n//       type,\n//       name,\n//       node\n//     }).toString()\n\n//     return this.executeQuery(operationStr)\n//   }\n// }\n\nexport interface GraphQLError {\n  message: string\n  locations?: Array<{line: number; column: number}>\n  path?: Array<string | number>\n  extensions?: Record<string, any>\n}\n\nexport class TemporaryExecutor {\n  url: string\n  headers: Record<string, string | string[] | undefined>\n\n  constructor(url: string, headers: TemporaryExecutor['headers'] = {}) {\n    this.url = url\n    this.headers = headers\n  }\n\n  async execute<T>(props: {\n    node: T extends TrackedObject ? T : never\n    type: 'query' | 'mutation'\n    name: string\n  }) {\n    const query = graphqlGenerator({\n      type: props.type,\n      name: props.name,\n      node: props.node\n    })\n\n    const queryStr = query.toString()\n\n    const response = await fetch(this.url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        ...this.headers\n      },\n      body: JSON.stringify({query: queryStr}),\n      credentials: 'include'\n    })\n\n    const data = (await response.json()) as {\n      data: T | null\n      errors?: GraphQLError[]\n    }\n\n    return data\n  }\n}\n","import {Field, nodePathAnalyzer} from '../node-path-analyzer.js'\nimport {TrackedObject} from '../proxy/create-proxy-object.js'\nimport {QueryStructure} from './query-structure.js'\n\n// let observable = new Observable(observer => {\n//   setTimeout(async () => {\n//     for (let i = 0; i < 10; i++) {\n//       await new Promise(resolve => setTimeout(resolve, 1000))\n\n//       observer.next(i)\n//     }\n//   }, 5000)\n//   console.log('Observables invoked!')\n// })\n\n// observable.subscribe(v => {\n//   console.log(v)\n\n//   fs.writeFileSync('test.txt', v.toString())\n// })\n\nexport const graphqlGenerator = (props: {\n  type: 'query' | 'mutation'\n  name: string\n  node: TrackedObject\n}) => {\n  const paths: {\n    name: string\n    path: string\n    args: Field['args']\n  }[] = []\n\n  const newNode = props.node\n\n  nodePathAnalyzer({\n    node: newNode,\n    onPath: (name, path, args) => {\n      paths.push({name, path, args})\n    }\n  })\n\n  const query = new QueryStructure({\n    type: props.type,\n    name: props.name\n  })\n\n  for (const {name, path, args} of paths) {\n    query.addField(\n      {\n        name,\n        args\n      },\n      path\n    )\n  }\n\n  return query\n}\n","import type {Field} from './graphql/query-structure'\nimport {TrackedObject} from './proxy/create-proxy-object'\nimport {isProxied} from './proxy/is-proxied'\n\nexport {Field}\n\nexport interface NodePathAnalyzerProps {\n  node: TrackedObject\n  onPath: (name: string, path: string, args: Field['args']) => void\n}\n\nexport const nodePathAnalyzer = ({node, onPath}: NodePathAnalyzerProps) => {\n  /**\n   * Recursively loops through the properties of a TrackedObject and calls the\n   * onPath callback with information about each property.\n   *\n   * @param currentNode The TrackedObject to loop through.\n   * @param currentPath The path to the current TrackedObject, represented as an array of property names.\n   */\n  const loop = (currentNode: TrackedObject, currentPath: string[] = []) => {\n    // Mark the current node as untracked, so that we can track which properties are accessed by the onPath callback.\n    // currentNode.$isTracked = false\n\n    // Get the tracked properties of the current node.\n    const trackedProperties = Object.entries(currentNode.$trackedProps || {})\n\n    if (trackedProperties.length === 0) {\n      // If there are no tracked properties, include all properties from the node.\n      const properties = Object.entries(currentNode)\n\n      // Call the onPath callback for each non-function property that is not already tracked.\n      for (const [name, value] of properties) {\n        let v = value\n\n        if (Array.isArray(v)) {\n          v = v[0]\n        }\n\n        if (typeof v !== 'function' && !isProxied(v) && !name.startsWith('$')) {\n          onPath(name, currentPath.join('.'), [])\n        }\n      }\n    } else {\n      // If there are tracked properties, loop through each property and process it.\n      for (const [name, value] of trackedProperties) {\n        let propertyValue: TrackedObject = currentNode[name]\n        const isFn = typeof propertyValue === 'function'\n\n        if (isFn && !value.isFnAndCalled) {\n          // If the property is a function that has not been called, skip it.\n          continue\n        }\n\n        if (value.isFnAndCalled) {\n          // If the property is a function that has been called, call it and update the property value.\n          propertyValue = currentNode[name]()\n\n          // propertyValue.$isTracked = false\n        }\n\n        if (Array.isArray(propertyValue)) {\n          propertyValue = propertyValue[0]\n        }\n\n        // Mark the current node as untracked, so that we can track which properties are accessed by the onPath callback.\n        // currentNode.$isTracked = false\n\n        // Call the onPath callback with information about the current property.\n        onPath(name, currentPath.join('.'), value.args)\n\n        if (isProxied(propertyValue)) {\n          // If the property value is a TrackedObject, recursively loop through its properties.\n          const nextPath = [...currentPath, name]\n          loop(propertyValue, nextPath)\n        }\n      }\n    }\n  }\n\n  // Start the loop with the provided node.\n  loop(node)\n}\n","import {TemporaryExecutor} from './graphql/executor.js'\nimport {nodePopulate} from './node-populate.js'\nimport {TrackedObject} from './proxy/create-proxy-object.js'\nimport {SnekQueryContext} from './snek-query-middleware.js'\nimport {OnErrorFn} from './snek-query-on-error.js'\n\nexport class SnekQueryOperation {\n  #type: 'query' | 'mutation'\n  name: string\n  #node: TrackedObject\n  #context: SnekQueryContext\n  #apiURL: string\n  #attempt = 0\n\n  constructor(args: {\n    apiURL: string\n    type: 'query' | 'mutation'\n    name: string\n    node: TrackedObject\n    context: SnekQueryContext\n  }) {\n    this.#type = args.type\n    this.name = args.name\n    this.#node = args.node\n    this.#context = args.context\n    this.#apiURL = args.apiURL\n  }\n\n  getContext() {\n    return this.#context\n  }\n\n  setContext(context: SnekQueryContext) {\n    this.#context = context\n  }\n\n  getAttempt() {\n    return this.#attempt\n  }\n\n  async execute() {\n    this.#attempt++\n\n    const executor = new TemporaryExecutor(this.#apiURL, this.#context.headers)\n\n    const {data, errors} = await executor.execute({\n      type: this.#type,\n      name: this.name,\n      node: this.#node\n    })\n\n    const populated = data\n      ? nodePopulate({\n          node: this.#node,\n          data\n        })\n      : null\n\n    return {\n      data: populated,\n      errors\n    }\n  }\n}\n\ntype ValueType<T> = T extends Promise<infer U> ? U : T\n\nexport const runOperationWithRetry = async (\n  operation: SnekQueryOperation,\n  onError?: OnErrorFn\n) => {\n  let operationResult: ValueType<ReturnType<typeof operation.execute>> = {\n    data: null,\n    errors: []\n  }\n  let networkError\n\n  try {\n    operationResult = await operation.execute()\n  } catch (e) {\n    networkError = e\n  }\n\n  if (onError && (operationResult?.errors || networkError)) {\n    const forwarded = onError?.({\n      forward: op => runOperationWithRetry(op),\n      operation,\n      graphQLErrors: operationResult?.errors || [],\n      networkError\n    }) as Promise<typeof operationResult> | undefined\n\n    if (forwarded) {\n      const forwardedResult = await forwarded\n\n      if (forwardedResult) {\n        operationResult = forwardedResult\n\n        return operationResult\n      }\n    }\n  }\n\n  if (networkError) {\n    throw networkError\n  }\n\n  return operationResult\n}\n","import {TrackedObject} from './proxy'\n\nexport interface NodePopulateProps<T> {\n  node: T\n  data: Object | null\n}\n\nexport const nodePopulate = <T extends TrackedObject>(\n  props: NodePopulateProps<T>\n): T => {\n  const {node, data} = props\n\n  const dataLoop = (n: TrackedObject, data: object | null) => {\n    const root: any = {}\n\n    if (!data) return null\n\n    for (const [key, dataLvl] of Object.entries(data)) {\n      const node = n[key]\n\n      if (node === undefined) {\n        continue\n      }\n\n      const isFn = typeof node === 'function'\n\n      let value = node\n\n      if (isFn) {\n        value = node()\n      }\n\n      if (Array.isArray(value) && dataLvl) {\n        const data = dataLvl.map((d: object, index: number) => {\n          if (value[index]) {\n            const o = value[index]\n            const data = dataLoop(o, d)\n\n            return data\n          } else {\n            return d\n          }\n        })\n\n        value = data\n      } else if (value !== null && typeof value === 'object') {\n        const data = dataLoop(value, dataLvl)\n\n        value = data\n      } else {\n        value = dataLvl\n      }\n\n      if (isFn) {\n        root[key] = () => value\n      } else {\n        root[key] = value\n      }\n    }\n\n    return root\n  }\n\n  return dataLoop(node, data) as T\n}\n","export interface StorageAdapter {\n  get: (key: string) => Promise<string | null>\n  set: (key: string, value: string) => Promise<void>\n  remove: (key: string) => Promise<void>\n}\n\nexport class Storage {\n  static readonly KEY = '@snek-query:storage'\n\n  get: (key: string) => Promise<string | null>\n  set: (key: string, value: string) => Promise<void>\n  remove: (key: string) => Promise<void>\n\n  constructor(adapter: StorageAdapter) {\n    this.get = (key: string) => adapter.get(this.#makeKey(key))\n    this.set = (key: string, value: string) =>\n      adapter.set(this.#makeKey(key), value)\n    this.remove = (key: string) => adapter.remove(this.#makeKey(key))\n  }\n\n  #makeKey(key: string) {\n    return `${Storage.KEY}:${key}`\n  }\n}\n","import {Storage} from './index.js'\n\nexport const storage = new Storage({\n  get: key => Promise.resolve(localStorage.getItem(key)),\n  set: (key, value) => Promise.resolve(localStorage.setItem(key, value)),\n  remove: key => Promise.resolve(localStorage.removeItem(key))\n})\n","\nimport { proxy, arrayProxy, fnProxy, fnArrayProxy, t } from \"snek-query\";\n\n\n\nexport class Query {\n    __typename: t.String;\n    allService: LensService[];\n    version: t.String;\n    constructor() { this.__typename = \"\"; this.allService = arrayProxy(LensService); this.version = \"\"; }\n}\nexport class LensService {\n    __typename: t.String;\n    id: t.String;\n    label: t.Nullable<t.String>;\n    defaultPath: t.Nullable<t.String>;\n    fqdn: t.String;\n    host: t.String;\n    port: t.NotSupportedYet;\n    constructor() { this.__typename = \"\"; this.id = \"\"; this.label = null; this.defaultPath = null; this.fqdn = \"\"; this.host = \"\"; this.port = null; }\n}\nexport class Mutation {\n    __typename: t.String;\n    serviceLableUpdate: (args: {\n        id: t.String;\n        label: t.String;\n    }) => LensService[];\n    serviceDefaultPathUpdate: (args: {\n        id: t.String;\n        defaultPath: t.String;\n    }) => LensService[];\n    constructor() { this.__typename = \"\"; this.serviceLableUpdate = fnArrayProxy(LensService); this.serviceDefaultPathUpdate = fnArrayProxy(LensService); }\n}\n\n","import {makeSnekQuery} from 'snek-query'\nimport {Query, Mutation} from './schema.generated'\n\nexport const sq = makeSnekQuery(\n  {Query, Mutation},\n  {\n    apiURL: 'https://photonq.lens.atsnek.com/graphql'\n  }\n)\n","import {GraphQLError} from './graphql/executor.js'\nimport {proxy} from './proxy/index.js'\nimport {MiddlewareFn, processMiddlewares} from './snek-query-middleware.js'\nimport {OnErrorFn} from './snek-query-on-error.js'\nimport {\n  runOperationWithRetry,\n  SnekQueryOperation\n} from './snek-query-operation.js'\n\nexport const makeSnekQuery = <Q extends {}, M extends {}>(\n  operations: {\n    Query?: new () => Q\n    Mutation?: new () => M\n  },\n  options: {\n    apiURL: string\n    middlewares?: MiddlewareFn[]\n    onError?: OnErrorFn\n  }\n) => {\n  const until = async <O, T>(\n    operationType: 'Query' | 'Mutation',\n    callback: (data: O) => T,\n    operationptions: {\n      name?: string\n      headers?: Record<string, string | string[] | undefined>\n    } = {}\n  ) => {\n    const operation = operations[operationType]\n\n    if (!operation) throw new Error(`No ${operationType} operation defined.`)\n\n    // override type to prevent $ properties from being added\n    const node = proxy<Q | M>(operation)\n\n    const context = await processMiddlewares(options.middlewares || [])\n\n    // merge context headers with operation headers\n    context.headers = {\n      ...context.headers,\n      ...operationptions.headers\n    }\n\n    callback(node as O)\n\n    // new promise that resolves when the operation is populated\n    const promise = new Promise<[T, GraphQLError[] | undefined]>(\n      async (resolve, reject) => {\n        try {\n          const operation = new SnekQueryOperation({\n            apiURL: options.apiURL,\n            type: operationType === 'Query' ? 'query' : 'mutation',\n            name: operationptions.name || 'SnekQueryOperation',\n            node,\n            context\n          })\n\n          const res = await runOperationWithRetry(operation, options.onError)\n\n          const cbData = callback((res.data as O) || (node as O))\n          const cbErrors = res.errors\n\n          resolve([cbData, cbErrors])\n        } catch (err) {\n          reject(err)\n        }\n      }\n    )\n\n    return promise\n  }\n\n  const lazy = <O>(\n    operationType: 'Query' | 'Mutation',\n    operationName: string = 'Unnamed'\n  ): [() => Promise<{data: O; errors?: any[]}>, O] => {\n    const operation = operations[operationType]\n\n    if (!operation) throw new Error(`No ${operationType} operation defined.`)\n\n    const node = proxy<Q | M>(operation)\n\n    const getData = async () => {\n      const context = await processMiddlewares(options.middlewares || [])\n\n      const operation = new SnekQueryOperation({\n        apiURL: options.apiURL,\n        type: operationType === 'Query' ? 'query' : 'mutation',\n        name: operationName,\n        node,\n        context\n      })\n\n      const res = await runOperationWithRetry(operation, options.onError)\n\n      return {\n        data: (res.data as O) || (node as O),\n        errors: res.errors\n      }\n    }\n\n    return [getData, node as O]\n  }\n\n  const queryUntil = async <T>(\n    callback: (q: Q) => T,\n    options: {\n      name?: string\n      headers?: Record<string, string | string[] | undefined>\n    } = {}\n  ) => until('Query', callback, options)\n\n  const mutationUntil = async <T>(\n    callback: (m: M) => T,\n    options: {\n      name?: string\n      headers?: Record<string, string | string[] | undefined>\n    } = {}\n  ) => until('Mutation', callback, options)\n\n  const lazyQuery = () => lazy<Q>('Query')\n  const lazyMutation = () => lazy<M>('Mutation')\n\n  return {\n    query: queryUntil,\n    mutate: mutationUntil,\n    lazyQuery,\n    lazyMutation\n  }\n}\n\nexport type SnekQuery = ReturnType<typeof makeSnekQuery>\n\nexport type SnekQueryQueryResult<T extends SnekQuery> = Parameters<\n  Parameters<T['query']>[0]\n>[0]\nexport type SnekQueryMutationResult<T extends SnekQuery> = Parameters<\n  Parameters<T['mutate']>[0]\n>[0]\n\nexport type SnekQueryResultFromUntil<\n  T extends SnekQuery['query'] | SnekQuery['mutate']\n> = Parameters<Parameters<T>[0]>[0]\n","import {\n  Button,\n  Heading,\n  HStack,\n  Input,\n  Link,\n  Stack,\n  Table,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr\n} from '@chakra-ui/react'\nimport {LensService} from 'clients/lens/src/schema.generated'\nimport {graphql, Link as GatsbyLink} from 'gatsby'\nimport {PageConfig} from 'jaen'\nimport {useEffect, useState} from 'react'\nimport {FaEdit} from 'react-icons/fa'\n\nimport {sq} from '../../clients/lens/src'\n\nconst Page: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [services, setServices] = useState<LensService[]>([])\n\n  useEffect(() => {\n    const fetchServices = async () => {\n      setIsLoading(true)\n      const [data, errors] = await sq.query(q => q.allService)\n      if (errors) {\n        throw new Error(errors[0]?.message)\n      }\n\n      setServices(data)\n      setIsLoading(false)\n    }\n    fetchServices()\n  }, [])\n\n  const updateServiceLabel = async (id: string, label: string) => {\n    const [data, errors] = await sq.mutate(m =>\n      m.serviceLableUpdate({id, label})\n    )\n    if (errors) {\n      throw new Error(errors[0]?.message)\n    }\n\n    setServices(data)\n  }\n\n  const [isEditing, setIsEditing] = useState(false)\n\n  return (\n    <Stack spacing=\"4\">\n      <Heading size=\"md\">Services ({services.length})</Heading>\n\n      <HStack justifyContent=\"end\">\n        <Button\n          variant=\"outline\"\n          leftIcon={<FaEdit />}\n          onClick={() => {\n            setIsEditing(!isEditing)\n          }}>\n          {isEditing ? 'Done' : 'Edit'}\n        </Button>\n      </HStack>\n\n      <Table>\n        <Thead>\n          <Tr>\n            <Th>Service</Th>\n            <Th>Host</Th>\n            <Th>Port</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {isLoading && (\n            <Tr>\n              <Td colSpan={4}>Loading...</Td>\n            </Tr>\n          )}\n\n          {services.map(service => (\n            <Tr key={service.id}>\n              <Td>\n                {isEditing ? (\n                  <Input\n                    defaultValue={service.label || service.id}\n                    onBlur={e => {\n                      updateServiceLabel(service.id, e.target.value)\n                    }}\n                  />\n                ) : (\n                  <Link\n                    as={GatsbyLink}\n                    to={`/lens/service/#${service.fqdn}${\n                      service.defaultPath || ''\n                    }`}>\n                    {service.label || service.id}\n                  </Link>\n                )}\n              </Td>\n              <Td>{service.host}</Td>\n              <Td>{service.port}</Td>\n            </Tr>\n          ))}\n        </Tbody>\n      </Table>\n    </Stack>\n  )\n}\n\nexport default Page\n\nexport const pageConfig: PageConfig = {\n  label: 'Lens',\n  icon: 'FaBullseye',\n  menu: {\n    type: 'app',\n    order: 500\n  },\n  layout: {\n    name: 'jaen'\n  },\n  auth: {\n    isRequired: true,\n    isAdminRequired: true\n  },\n  breadcrumbs: [\n    {\n      label: 'Lens',\n      path: '/lens/'\n    }\n  ]\n}\n\nexport const query = graphql`\n  query ($jaenPageId: String!) {\n    ...JaenPageQuery\n    allJaenPage {\n      nodes {\n        ...JaenPageData\n        children {\n          ...JaenPageData\n        }\n      }\n    }\n  }\n`\n\nexport {Head} from 'jaen'\n","'use client'\n\n// src/heading.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Heading = forwardRef(function Heading2(props, ref) {\n  const styles = useStyleConfig(\"Heading\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.h2,\n    {\n      ref,\n      className: cx(\"chakra-heading\", props.className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nHeading.displayName = \"Heading\";\n\nexport {\n  Heading\n};\n//# sourceMappingURL=chunk-7OLJDQMT.mjs.map","'use client'\nimport {\n  useTableStyles\n} from \"./chunk-GEJVU65N.mjs\";\n\n// src/thead.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Thead = forwardRef((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ jsx(chakra.thead, { ...props, ref, __css: styles.thead });\n});\n\nexport {\n  Thead\n};\n//# sourceMappingURL=chunk-DRZNIHMG.mjs.map","'use client'\n\n// src/table.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [TableStylesProvider, useTableStyles] = createContext({\n  name: `TableStylesContext`,\n  errorMessage: `useTableStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Table />\" `\n});\nvar Table = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Table\", props);\n  const { className, layout, ...tableProps } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(TableStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.table,\n    {\n      ref,\n      __css: { tableLayout: layout, ...styles.table },\n      className: cx(\"chakra-table\", className),\n      ...tableProps\n    }\n  ) });\n});\nTable.displayName = \"Table\";\n\nexport {\n  useTableStyles,\n  Table\n};\n//# sourceMappingURL=chunk-GEJVU65N.mjs.map","'use client'\nimport {\n  useTableStyles\n} from \"./chunk-GEJVU65N.mjs\";\n\n// src/tr.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Tr = forwardRef((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ jsx(chakra.tr, { ...props, ref, __css: styles.tr });\n});\n\nexport {\n  Tr\n};\n//# sourceMappingURL=chunk-GIQFRSD6.mjs.map","'use client'\nimport {\n  useTableStyles\n} from \"./chunk-GEJVU65N.mjs\";\n\n// src/tbody.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Tbody = forwardRef((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ jsx(chakra.tbody, { ...props, ref, __css: styles.tbody });\n});\n\nexport {\n  Tbody\n};\n//# sourceMappingURL=chunk-J4QO5GAJ.mjs.map","'use client'\nimport {\n  useTableStyles\n} from \"./chunk-GEJVU65N.mjs\";\n\n// src/th.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Th = forwardRef(\n  ({ isNumeric, ...rest }, ref) => {\n    const styles = useTableStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.th,\n      {\n        ...rest,\n        ref,\n        __css: styles.th,\n        \"data-is-numeric\": isNumeric\n      }\n    );\n  }\n);\n\nexport {\n  Th\n};\n//# sourceMappingURL=chunk-MGVPL3OH.mjs.map","'use client'\nimport {\n  useTableStyles\n} from \"./chunk-GEJVU65N.mjs\";\n\n// src/td.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Td = forwardRef(\n  ({ isNumeric, ...rest }, ref) => {\n    const styles = useTableStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.td,\n      {\n        ...rest,\n        ref,\n        __css: styles.td,\n        \"data-is-numeric\": isNumeric\n      }\n    );\n  }\n);\n\nexport {\n  Td\n};\n//# sourceMappingURL=chunk-T2WCTPDH.mjs.map"],"names":["s","e","t","r","Proxy","get","n","o","Reflect","$isTracked","startsWith","hasOwnProperty","name","args","arguments","Object","entries","map","_ref","value","apply","this","isFnAndCalled","find","push","assign","$trackedProps","a","getOwnPropertyDescriptor","ownKeys","i","Number","isNaN","Array","prototype","_Array$prototype$r","_Array$prototype$r2","_len","length","_key","call","concat","Error","toString","l","fn","isProxied","u","async","headers","context","f","isArray","d","type","fields","_proto","addField","filter","preventStringSerialization","split","h","join","JSON","stringify","String","_ref2","m","url","execute","_ref3","node","onPath","_toConsumableArray","path","fetch","method","body","query","credentials","json","g","v","w","b","$","j","defineProperty","writable","apiURL","_proto3","getContext","setContext","getAttempt","data","errors","dataLoop","O","forward","operation","graphQLErrors","networkError","x","S","A","set","remove","KEY","Promise","resolve","localStorage","getItem","setItem","removeItem","LensService","__typename","id","label","defaultPath","fqdn","host","port","sq","makeSnekQuery","c","middlewares","onError","mutate","lazyQuery","lazyMutation","Query","allService","arrayProxy","version","Mutation","serviceLableUpdate","fnArrayProxy","serviceDefaultPathUpdate","Page","isLoading","setIsLoading","useState","services","setServices","useEffect","q","_errors$","message","fetchServices","isEditing","setIsEditing","_jsxs","Stack","spacing","children","Heading","size","_jsx","HStack","justifyContent","Button","variant","leftIcon","FaEdit","onClick","Table","Thead","Tr","Th","Tbody","Td","colSpan","service","Input","defaultValue","onBlur","_errors$2","updateServiceLabel","target","Link","as","GatsbyLink","to","pageConfig","icon","menu","order","layout","auth","isRequired","isAdminRequired","breadcrumbs","props","ref","styles","className","rest","jsx","h2","cx","__css","displayName","thead","TableStylesProvider","useTableStyles","errorMessage","tableProps","table","tableLayout","tr","tbody","isNumeric","th","td"],"sourceRoot":""}