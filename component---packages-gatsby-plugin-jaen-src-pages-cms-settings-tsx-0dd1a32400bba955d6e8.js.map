{"version":3,"file":"component---packages-gatsby-plugin-jaen-src-pages-cms-settings-tsx-0dd1a32400bba955d6e8.js","mappings":"mLAMO,MAAMA,EAAcC,IACzB,MAAM,MAACC,EAAK,SAAEC,KAAaC,GAAaH,EACxC,OACEI,EAAAA,EAAAA,IAACC,EAAAA,EAAK,CACJC,UAAW,CAACC,KAAM,SAAUC,GAAI,OAChCC,QAAQ,IACRC,GAAG,OACCP,EAASD,SAAA,EACbS,EAAAA,EAAAA,IAACC,EAAAA,GAAG,CAACC,KAAK,MAAKX,SACZD,IACCU,EAAAA,EAAAA,IAACG,EAAAA,EAAO,CAACC,GAAG,KAAKC,WAAW,WAAWC,SAAS,KAAKC,WAAY,EAAEhB,SAChED,MAINC,IACK,C,2ICbL,MAAMiB,EAA8CnB,IACzD,MAAMoB,GAAaC,EAAAA,EAAAA,IAAc,aAsBjC,OACEV,EAAAA,EAAAA,IAACW,EAAAA,GAAqB,CACpBC,YAAaH,EAAWI,YAAYC,MACpCC,UAAWN,EAAWO,gBAAgBF,MAAMvB,SAC3CF,EAAME,UACe,EAIf0B,EACXC,GAEuC7B,IAEnCW,EAAAA,EAAAA,IAACQ,EAAa,CAAAjB,UACZS,EAAAA,EAAAA,IAACkB,EAAS,IAAK7B,K,kLC3BhB,MAAM8B,EAAoD9B,IAC/D,MAAM,EAAC+B,EAAU,EAACC,IAAgBC,EAAAA,EAAAA,WAAS,GAU3C,OACE7B,EAAAA,EAAAA,IAACC,EAAAA,EAAK,CAACC,UAAU,MAAMG,QAAQ,IAAIyB,MAAM,SAASC,MAAM,OAAMjC,SAAA,EAC5DS,EAAAA,EAAAA,IAACC,EAAAA,GAAG,CAACwB,QAAS,GAAIvB,KAAK,KAAKwB,aAAa,KAAKC,GAAG,YAAWpC,SACzDF,EAAMuC,OACL5B,EAAAA,EAAAA,IAAC6B,EAAAA,EAAK,CACJH,aAAa,KACbD,QAAQ,OACRK,IAAKzC,EAAMuC,MACXG,UAAU/B,EAAAA,EAAAA,IAACgC,EAAAA,EAAQ,CAACN,aAAa,KAAKD,QAAQ,YAGhDzB,EAAAA,EAAAA,IAACiC,EAAAA,EAAM,CAACR,QAAQ,OAAOC,aAAa,KAAInC,UACtCS,EAAAA,EAAAA,IAACkC,EAAAA,EAAI,CAACC,MAAM,QAAQ7B,SAAS,KAAIf,SAAC,kBAMxCE,EAAAA,EAAAA,IAACC,EAAAA,EAAK,CAAAH,SAAA,EACJE,EAAAA,EAAAA,IAAC2C,EAAAA,EAAM,CAACtC,QAAQ,IAAGP,SAAA,EACjBS,EAAAA,EAAAA,IAACqC,EAAAA,EAAM,CACLjB,UAAWA,EACXkB,QAAQ,UACRC,UAAUvC,EAAAA,EAAAA,IAACwC,EAAAA,iBAAgB,IAC3BC,QAhCOC,UACfrB,GAAa,GACb,UACQhC,EAAMsD,UACd,CAAE,MAAOC,GAAI,CACbvB,GAAa,EAAM,EA2BO9B,SAAC,iBAGpBF,EAAMuC,QACL5B,EAAAA,EAAAA,IAACqC,EAAAA,EAAM,CAACC,QAAQ,QAAQG,QAASpD,EAAMwD,SAAStD,SAAC,eAKrDS,EAAAA,EAAAA,IAACkC,EAAAA,EAAI,CAAC5B,SAAS,KAAKwC,GAAG,IAAIX,MAAM,QAAO5C,SACrCF,EAAM0D,mBAGL,ECxCZ,MAjBmE1D,IACjE,MAAM2D,GAAUC,EAAAA,EAAAA,IAAc,CAC5BC,SAAUC,IACR9D,EAAMsD,SAASQ,EAAM,IAIzB,OACEnD,EAAAA,EAAAA,IAACmB,EAAgB,CACfwB,SAAUK,EAAQI,YAClBP,SAAUxD,EAAMwD,SAChBE,YAAa1D,EAAM0D,YACnBnB,MAAOvC,EAAMuC,OACb,C,iUCoBC,MAAMyB,EAAoCC,IAAuB,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAArB,KAACC,EAAI,SAAEC,GAAStB,EAChE,MAAOuB,EAAeC,GAAoBC,EAAAA,SAAeJ,IAEnD,SACJK,EAAQ,MACRC,EAAK,aACLC,EAAY,SACZC,EAAQ,QACRC,EAAO,UACPC,EACAC,WAAW,OAACC,EAAM,aAAEC,EAAY,QAAEC,KAChCC,EAAAA,EAAAA,IAAsB,CACxBb,kBAGIc,EAAYC,IAChBhB,EAASgB,EAAO,EAelB,OAZAC,EAAAA,EAAAA,YAAU,KACRf,EAAiBH,GAEjBM,EAAM,CACJa,aAAcC,OAAOC,KAAKrB,EAAKmB,cAAgB,CAAC,GAAGG,OAC/CtB,EAAKmB,aACL,MACJ,GACD,CAACnB,IAEJuB,QAAQC,IAAI,SAAUd,MAGpBrF,EAAAA,EAAAA,IAACC,EAAAA,GAAG,CAACmG,GAAG,OAAM7G,UACZS,EAAAA,EAAAA,IAAA,QACE2F,SAAUhB,IACHO,EAAaS,EAAbT,CAAuBP,EAAK,EACjCpF,UACFE,EAAAA,EAAAA,IAACC,EAAAA,EAAK,CACJI,QAAQ,IACRuG,SAASrG,EAAAA,EAAAA,IAACsG,EAAAA,EAAY,IACtBC,GAAI,CAAC3G,KAAM,IAAKC,GAAI,MAAMN,SAAA,EAC1BS,EAAAA,EAAAA,IAACG,EAAAA,EAAO,CAACqG,KAAK,KAAIjH,SAAC,cAEnBS,EAAAA,EAAAA,IAACZ,EAAAA,EAAU,CAACE,MAAM,YAAWC,UAC3BE,EAAAA,EAAAA,IAACgH,EAAAA,EAAM,CAACjF,MAAM,OAAO1B,QAAQ,IAAGP,SAAA,EAC9BE,EAAAA,EAAAA,IAACiH,EAAAA,GAAW,CAACC,YAAapB,SAAoB,QAAdhC,EAANgC,EAAQO,oBAAY,IAAAvC,IAApBA,EAAsBjE,OAAMC,SAAA,EACpDS,EAAAA,EAAAA,IAAC4G,EAAAA,EAAS,CAAArH,SAAC,WACXS,EAAAA,EAAAA,IAAC6G,EAAAA,EAAK,CACJC,YAAY,WACR9B,EAAS,qBAAsB,CACjC+B,UAAW,CAACnF,MAAO,IAAKoF,QAAS,0BAGrChH,EAAAA,EAAAA,IAACiH,EAAAA,GAAgB,CAAA1H,SACK,QADLiE,EACd+B,EAAOO,oBAAY,IAAAtC,GAAO,QAAPC,EAAnBD,EAAqBlE,aAAK,IAAAmE,OAAP,EAAnBA,EAA4BuD,cAIjCvH,EAAAA,EAAAA,IAACiH,EAAAA,GAAW,CAACC,YAAapB,SAAoB,QAAd7B,EAAN6B,EAAQO,oBAAY,IAAApC,IAApBA,EAAsBwD,SAAQ3H,SAAA,EACtDS,EAAAA,EAAAA,IAAC4G,EAAAA,EAAS,CAAArH,SAAC,SACXS,EAAAA,EAAAA,IAAC6G,EAAAA,EAAK,CACJC,YAAY,qBACR9B,EAAS,uBAAwB,CACnCmC,SAAU,CACRC,SAAUxF,GACRA,IAAU,eAAeyF,KAAKzF,GAC1B,+CACA0F,QAIZtH,EAAAA,EAAAA,IAACiH,EAAAA,GAAgB,CAAA1H,SACK,QADLoE,EACd4B,EAAOO,oBAAY,IAAAnC,GAAS,QAATC,EAAnBD,EAAqBuD,eAAO,IAAAtD,OAAT,EAAnBA,EAA8BoD,cAInCvH,EAAAA,EAAAA,IAACiH,EAAAA,GAAW,CAACC,YAAapB,SAAoB,QAAd1B,EAAN0B,EAAQO,oBAAY,IAAAjC,IAApBA,EAAsBd,aAAYxD,SAAA,EAC1DS,EAAAA,EAAAA,IAAC4G,EAAAA,EAAS,CAAArH,SAAC,iBACXS,EAAAA,EAAAA,IAACuH,EAAAA,EAAQ,CACPC,KAAM,EACNV,YAAY,sEACR9B,EAAS,gCAEM,QAApBlB,EAACyB,EAAOO,oBAAY,IAAAhC,GAAnBA,EAAqBf,eACrB/C,EAAAA,EAAAA,IAACyH,EAAAA,GAAc,CAAAlI,SAAC,sCAKlBS,EAAAA,EAAAA,IAACiH,EAAAA,GAAgB,CAAA1H,SACK,QADLwE,EACdwB,EAAOO,oBAAY,IAAA/B,GAAa,QAAbC,EAAnBD,EAAqBhB,mBAAW,IAAAiB,OAAb,EAAnBA,EAAkCgD,cAIvCvH,EAAAA,EAAAA,IAACiH,EAAAA,GAAW,CAACN,GAAG,QAAO7G,SAAA,EACrBS,EAAAA,EAAAA,IAAC4G,EAAAA,EAAS,CAAArH,SAAC,WAEXS,EAAAA,EAAAA,IAAC0H,EAAAA,GAAU,CACTtC,QAASA,EACTuC,KAAK,qBACLC,OAAQC,IAAuB,IAArBC,OAAO,MAAClG,IAAOiG,EACvB,OACE7H,EAAAA,EAAAA,IAACmB,EAAAA,EAAgB,CACfS,MAAOA,EACPe,SAAUQ,IACRgC,EAAS,qBAAsBhC,EAAM4E,IAAK,CACxCC,aAAa,GACb,EAEJnF,SAAUA,KACRsC,EAAS,qBAAsB,GAAI,CACjC6C,aAAa,GACb,EAEJjF,YAAY,yCACZ,aAQd/C,EAAAA,EAAAA,IAACZ,EAAAA,EAAU,CAACE,MAAM,eAAcC,UAC9BE,EAAAA,EAAAA,IAACgH,EAAAA,EAAM,CAACjF,MAAM,OAAO1B,QAAQ,IAAGP,SAAA,EAC9BE,EAAAA,EAAAA,IAACiH,EAAAA,GAAW,CACVC,YAAapB,SAAoB,QAAdtB,EAANsB,EAAQO,oBAAY,IAAA7B,GAAc,QAAdC,EAApBD,EAAsBgE,oBAAY,IAAA/D,IAAlCA,EAAoCyD,MAAKpI,SAAA,EACtDS,EAAAA,EAAAA,IAAC4G,EAAAA,EAAS,CAAArH,SAAC,UACXS,EAAAA,EAAAA,IAAC6G,EAAAA,EAAK,CACJC,YAAY,UACR9B,EAAS,iCAAkC,CAC7C+B,UAAW,CAACnF,MAAO,IAAKoF,QAAS,yBAGrChH,EAAAA,EAAAA,IAACiH,EAAAA,GAAgB,CAAA1H,SACK,QADL4E,EACdoB,EAAOO,oBAAY,IAAA3B,GAAc,QAAdC,EAAnBD,EAAqB8D,oBAAY,IAAA7D,GAAM,QAANC,EAAjCD,EAAmCuD,YAAI,IAAAtD,OAApB,EAAnBA,EAAyC2C,cAG9CvH,EAAAA,EAAAA,IAACiH,EAAAA,GAAW,CACVC,YAAapB,SAAoB,QAAdjB,EAANiB,EAAQO,oBAAY,IAAAxB,GAAc,QAAdC,EAApBD,EAAsB2D,oBAAY,IAAA1D,IAAlCA,EAAoCwD,KAAIxI,SAAA,EACrDS,EAAAA,EAAAA,IAAC4G,EAAAA,EAAS,CAAArH,SAAC,SACXS,EAAAA,EAAAA,IAAC6G,EAAAA,EAAK,CACJC,YAAY,qBACR9B,EAAS,gCAAiC,CAC5CmC,SAAU,CACRC,SAAUxF,GACRA,IAAU,eAAeyF,KAAKzF,GAC1B,+CACA0F,QAIZtH,EAAAA,EAAAA,IAACiH,EAAAA,GAAgB,CAAA1H,SACK,QADLiF,EACde,EAAOO,oBAAY,IAAAtB,GAAc,QAAdC,EAAnBD,EAAqByD,oBAAY,IAAAxD,GAAK,QAALC,EAAjCD,EAAmCsD,WAAG,IAAArD,OAAnB,EAAnBA,EAAwCsC,cAG7CvH,EAAAA,EAAAA,IAACiH,EAAAA,GAAW,CAACN,GAAG,QAAO7G,SAAA,EACrBS,EAAAA,EAAAA,IAAC4G,EAAAA,EAAS,CAAArH,SAAC,WAEXS,EAAAA,EAAAA,IAAC0H,EAAAA,GAAU,CACTtC,QAASA,EACTuC,KAAK,iCACLC,OAAQM,IAAA,IAAEJ,OAAO,MAAClG,IAAOsG,EAAA,OACvBlI,EAAAA,EAAAA,IAACmB,EAAAA,EAAgB,CACfS,MAAOA,EACPe,SAAUQ,IACRgC,EAAS,iCAAkChC,EAAM4E,IAAK,CACpDC,aAAa,GACb,EAEJnF,SAAUA,KACRsC,EAAS,iCAAkC,GAAI,CAC7C6C,aAAa,GACb,EAEJjF,YAAY,iDACZ,aAOZ/C,EAAAA,EAAAA,IAACoC,EAAAA,EAAM,CAAC+F,eAAe,QAAO5I,UAC5BE,EAAAA,EAAAA,IAAC2I,EAAAA,EAAW,CAAA7I,SAAA,EACVS,EAAAA,EAAAA,IAACqC,EAAAA,EAAM,CACLC,QAAQ,UACR+F,YAAa5C,EACbhD,QAASA,KACPwC,OAAMqC,EAAW,CACfgB,WAAW,GACX,EACF/I,SAAC,YAGLS,EAAAA,EAAAA,IAACqC,EAAAA,EAAM,CACLkG,KAAK,SACLnH,UAAWoE,EACX6C,YAAa5C,EAAQlG,SAAC,oBAO5B,E,aCnPV,MAAMiJ,EAAoCA,KACxC,MAAMC,GAAUC,EAAAA,EAAAA,OACV,MAACC,IAASC,EAAAA,EAAAA,MAEhB,OACE5I,EAAAA,EAAAA,IAACqD,EAAQ,CACPsB,KAAM,CAACmB,aAAc2C,EAAQ3C,cAC7BlB,SAAUtB,IAAkC,IAAjC,aAACwC,GAA2BxC,EACrCmF,EAAQI,mBAAmB/C,GAAgB,CAAC,GAE5C6C,EAAM,CACJrJ,MAAO,mBACPwJ,OAAQ,WACR,GAEJ,EAYN,MARkCzJ,IAE9BW,EAAAA,EAAAA,IAACQ,EAAAA,GAAa,CAAAjB,UACZS,EAAAA,EAAAA,IAACwI,EAAY,IAAKnJ,MAOjB,MAAM0J,EAAyB,CACpCC,MAAO,sBACPC,KAAM,QACNC,KAAM,CACJF,MAAO,WACPT,KAAM,MACNY,MAAO,MACPC,MAAO,KAGTC,YAAa,CACX,CACEL,MAAO,MACPM,KAAM,SAER,CACEN,MAAO,WACPM,KAAM,mBAGVC,8BAA8B,EAC9BC,KAAM,CACJC,iBAAiB,GAEnBC,OAAQ,CACN/B,KAAM,Q,+ECvDNrB,EAAgBjH,IAA0B,IAAAsK,KAC5C,IAAOC,IACP,CACEC,UAAW,2BACRxK,EACHyK,MAAO,IACFzK,EAAa,MAChB0K,YAAa,EACbC,UAAW,UACXC,YAAa,UACbzI,MAAO,OACP0I,OAAQ,UAId5D,EAAa6D,YAAc,c,sJCFvBC,GAAiB,OAAO,MAAO,CACjCC,UAAW,CACTC,UAAW,OACXC,eAAgB,cAChBC,OAAQ,UACRrI,MAAO,cACPsI,cAAe,OACfC,WAAY,OACZ,yBAA0B,CACxBC,WAAY,aAIdC,GAAc,QAAO,wBACrBC,GAAY,QAAO,sBACnBC,GAAO,QAAU,CACnBC,KAAM,CAAEC,QAAS,GACjBC,GAAI,CAAED,QAAS,KAEbE,GAAS,QAAU,CACrBH,KAAM,CACJd,YAAaW,EAAYO,UACzBC,WAAYR,EAAYO,WAE1BF,GAAI,CACFhB,YAAaY,EAAUM,UACvBC,WAAYP,EAAUM,aAGtBnJ,GAAW,QAAW,CAAC3C,EAAOgM,KAChC,MAAMC,EAAgB,IACjBjM,EACHkM,aAA4C,iBAAvBlM,EAAMkM,aAA4BlM,EAAMkM,aAAe,GAC5EC,MAA8B,iBAAhBnM,EAAMmM,MAAqBnM,EAAMmM,MAAQ,IAEnDC,GAAS,QAAe,WAAYH,GACpCI,EClDR,WACE,MAAMA,GAAgB,IAAAC,SAAO,GAI7B,OAHA,IAAA9F,YAAU,KACR6F,EAAcE,SAAU,CAAK,GAC5B,IACIF,EAAcE,OACvB,CD4CwBC,IAChB,WACJC,EAAa,GAAE,SACfC,EAAW,GAAE,SACbC,EAAQ,aACRT,EAAY,MACZC,EAAK,UACL3B,EAAS,WACToC,KACGC,IACD,QAAiBZ,IACda,EAAeC,IAAe,QAAS,SAAU,CACtDN,EACAC,IAEIM,EEjER,SAAqBzK,GACnB,MAAMyJ,GAAM,IAAAM,UAIZ,OAHA,IAAA9F,YAAU,KACRwF,EAAIO,QAAUhK,CAAK,GAClB,CAACA,IACGyJ,EAAIO,OACb,CF2D8BU,CAAYN,GAClCO,GAAa,IAAAC,IAAG,kBAAmB3C,GACnC4C,EAAe,IAChBN,GAAiB,CAAE,CAACvB,EAAY8B,UAAWP,MAC3CC,GAAe,CAAE,CAACvB,EAAU6B,UAAWN,IAE5C,GAAIJ,EAAU,CACZ,MAAMW,EAAYjB,GAAiBW,EAAsB,OAAS,GAAGvB,KAAQS,KAC7E,OAAuB,IAAA5B,KACrB,IAAOC,IACP,CACEyB,MACAxB,UAAW0C,EACXzC,MAAO,CAAE6C,gBACNT,GAGT,CACA,OAAuB,IAAAvC,KACrBS,EACA,CACEiB,MACAxB,UAAW0C,KACRL,EACHpC,MAAO,CACLtI,MAAOyK,EAAa,mBAAgB,KACjCR,KACAgB,EACHG,MAAO,IAAKnB,EAAc,SAAMgB,GAChCE,UAAW,GAAGnB,gCAAoCN,MAGvD,IAEHlJ,EAASmI,YAAc,U,gIG9EvB,IAAI0C,EAAU,CAAC,IAAK,OAAQ,SAAU,aAClCtF,GAAW,QAAW,CAAClI,EAAOgM,KAChC,MAAMI,GAAS,QAAe,WAAYpM,IACpC,UAAEwK,EAAS,KAAErC,KAAS0E,IAAS,QAAiB7M,GAChDyN,GAAgB,OAAeZ,GAC/Ba,EAAiBvF,EAjBzB,SAAcwF,EAAQC,EAAa,IACjC,MAAMC,EAAQnH,OAAOoH,OAAO,CAAC,EAAGH,GAChC,IAAK,MAAMI,KAAOH,EACZG,KAAOF,UACFA,EAAME,GAGjB,OAAOF,CACT,CASgCG,CAAK5B,EAAQoB,GAAWpB,EACtD,OAAuB,IAAA9B,KACrB,IAAO2D,SACP,CACEjC,MACA7D,UACGsF,EACHjD,WAAW,IAAA2C,IAAG,kBAAmB3C,GACjCC,MAAOiD,GAEV,IAEHxF,EAAS4C,YAAc,U","sources":["webpack://photonq/../packages/gatsby-plugin-jaen/src/components/shared/FieldGroup/FieldGroup.tsx","webpack://photonq/../packages/gatsby-plugin-jaen/src/connectors/cms-management.tsx","webpack://photonq/../packages/gatsby-plugin-jaen/src/components/shared/FormMediaChooser/FormMediaChooser.tsx","webpack://photonq/../packages/gatsby-plugin-jaen/src/containers/form-media-chooser.tsx","webpack://photonq/../packages/gatsby-plugin-jaen/src/components/cms/Settings/Settings.tsx","webpack://photonq/../packages/gatsby-plugin-jaen/src/pages/cms/settings.tsx","webpack://photonq/../node_modules/@chakra-ui/layout/dist/chunk-KTD65HY5.mjs","webpack://photonq/../node_modules/@chakra-ui/skeleton/dist/chunk-GOJLRND4.mjs","webpack://photonq/../node_modules/@chakra-ui/skeleton/dist/chunk-AASO4CLC.mjs","webpack://photonq/../node_modules/@chakra-ui/react-use-previous/dist/index.mjs","webpack://photonq/../node_modules/@chakra-ui/textarea/dist/chunk-4IH3O7BJ.mjs"],"sourcesContent":["import {Box, Heading, Stack, StackProps} from '@chakra-ui/react'\n\nexport interface FieldGroupProps extends StackProps {\n  title?: string\n}\n\nexport const FieldGroup = (props: FieldGroupProps) => {\n  const {title, children, ...flexProps} = props\n  return (\n    <Stack\n      direction={{base: 'column', md: 'row'}}\n      spacing=\"6\"\n      py=\"4\"\n      {...flexProps}>\n      <Box minW=\"3xs\">\n        {title && (\n          <Heading as=\"h2\" fontWeight=\"semibold\" fontSize=\"lg\" flexShrink={0}>\n            {title}\n          </Heading>\n        )}\n      </Box>\n      {children}\n    </Stack>\n  )\n}\n","import {CMSManagementProvider, JaenPage, JaenTemplate} from 'jaen'\nimport {graphql, useStaticQuery} from 'gatsby'\n\nexport {useCMSManagementContext as useCMSManagement} from 'jaen'\n\nexport interface CMSManagementProps {\n  children: React.ReactNode\n}\n\nexport const CMSManagement: React.FC<CMSManagementProps> = props => {\n  const staticData = useStaticQuery<{\n    allJaenPage: {\n      nodes: JaenPage[]\n    }\n    allJaenTemplate: {\n      nodes: JaenTemplate[]\n    }\n  }>(graphql`\n    query CMSManagementData {\n      allJaenPage {\n        nodes {\n          ...JaenPageData\n        }\n      }\n      allJaenTemplate {\n        nodes {\n          ...JaenTemplateData\n        }\n      }\n    }\n  `)\n\n  return (\n    <CMSManagementProvider\n      staticPages={staticData.allJaenPage.nodes}\n      templates={staticData.allJaenTemplate.nodes}>\n      {props.children}\n    </CMSManagementProvider>\n  )\n}\n\nexport const withCMSManagement = <P extends object>(\n  Component: React.ComponentType<P>\n): React.FC<P> => {\n  const WithCMSManagement: React.FC<P> = props => {\n    return (\n      <CMSManagement>\n        <Component {...props} />\n      </CMSManagement>\n    )\n  }\n\n  return WithCMSManagement\n}\n","import {\n  HStack,\n  Button,\n  Box,\n  Text,\n  Image,\n  Stack,\n  Center,\n  Skeleton\n} from '@chakra-ui/react'\nimport {useState} from 'react'\nimport {FaCloudUploadAlt} from 'react-icons/fa'\n\nexport interface FormMediaChooserProps {\n  onChoose: () => void\n  value?: string\n  onRemove: () => void\n  description?: string\n}\n\nexport const FormMediaChooser: React.FC<FormMediaChooserProps> = props => {\n  const [isLoading, setIsLoading] = useState(false)\n\n  const onChoose = async () => {\n    setIsLoading(true)\n    try {\n      await props.onChoose()\n    } catch (e) {}\n    setIsLoading(false)\n  }\n\n  return (\n    <Stack direction=\"row\" spacing=\"6\" align=\"center\" width=\"full\">\n      <Box boxSize={36} minW=\"36\" borderRadius=\"lg\" bg=\"bg.subtle\">\n        {props.value ? (\n          <Image\n            borderRadius=\"lg\"\n            boxSize=\"100%\"\n            src={props.value}\n            fallback={<Skeleton borderRadius=\"lg\" boxSize=\"100%\" />}\n          />\n        ) : (\n          <Center boxSize=\"100%\" borderRadius=\"lg\">\n            <Text color=\"muted\" fontSize=\"sm\">\n              No image\n            </Text>\n          </Center>\n        )}\n      </Box>\n      <Stack>\n        <HStack spacing=\"5\">\n          <Button\n            isLoading={isLoading}\n            variant=\"outline\"\n            leftIcon={<FaCloudUploadAlt />}\n            onClick={onChoose}>\n            Choose media\n          </Button>\n          {props.value && (\n            <Button variant=\"ghost\" onClick={props.onRemove}>\n              Remove\n            </Button>\n          )}\n        </HStack>\n        <Text fontSize=\"sm\" mt=\"3\" color=\"muted\">\n          {props.description}\n        </Text>\n      </Stack>\n    </Stack>\n  )\n}\n","import {MediaNode, useMediaModal} from 'jaen'\n\nimport {FormMediaChooser} from '../components/shared/FormMediaChooser'\n\nexport interface FormMediaChooserProps {\n  onChoose: (media: MediaNode) => void\n  onRemove: () => void\n  description?: string\n  value?: string\n}\n\nconst FormMediaChooserContainer: React.FC<FormMediaChooserProps> = props => {\n  const context = useMediaModal({\n    onSelect: media => {\n      props.onChoose(media)\n    }\n  })\n\n  return (\n    <FormMediaChooser\n      onChoose={context.toggleModal}\n      onRemove={props.onRemove}\n      description={props.description}\n      value={props.value}\n    />\n  )\n}\n\nexport default FormMediaChooserContainer\n","import {\n  Box,\n  Button,\n  ButtonGroup,\n  FormControl,\n  FormErrorMessage,\n  FormHelperText,\n  FormLabel,\n  Heading,\n  HStack,\n  Input,\n  Stack,\n  StackDivider,\n  Textarea,\n  VStack\n} from '@chakra-ui/react'\nimport React, {useEffect} from 'react'\nimport {Controller, useForm} from 'react-hook-form'\n\nimport FormMediaChooser from '../../../containers/form-media-chooser'\nimport {FieldGroup} from '../../shared/FieldGroup'\n\nexport interface FormDataType {\n  siteMetadata?: {\n    title?: string\n    siteUrl?: string\n    description?: string\n    image?: string\n    organization?: {\n      name?: string\n      url?: string\n      logo?: string\n    }\n    author?: {\n      name?: string\n    }\n  }\n}\n\nexport interface SettingsProps {\n  data: FormDataType\n  onUpdate: (data: FormDataType) => void\n}\n\nexport const Settings: React.FC<SettingsProps> = ({data, onUpdate}) => {\n  const [defaultValues, setDefaultValues] = React.useState(data)\n\n  const {\n    register,\n    reset,\n    handleSubmit,\n    setValue,\n    control,\n    getValues,\n    formState: {errors, isSubmitting, isDirty}\n  } = useForm<FormDataType>({\n    defaultValues\n  })\n\n  const onSubmit = (values: FormDataType) => {\n    onUpdate(values)\n  }\n\n  useEffect(() => {\n    setDefaultValues(data)\n\n    reset({\n      siteMetadata: Object.keys(data.siteMetadata || {}).length\n        ? data.siteMetadata\n        : null\n    })\n  }, [data])\n\n  console.log('values', getValues())\n\n  return (\n    <Box id=\"coco\">\n      <form\n        onSubmit={data => {\n          void handleSubmit(onSubmit)(data)\n        }}>\n        <Stack\n          spacing=\"4\"\n          divider={<StackDivider />}\n          px={{base: '4', md: '10'}}>\n          <Heading size=\"sm\">Settings</Heading>\n\n          <FieldGroup title=\"Site Info\">\n            <VStack width=\"full\" spacing=\"6\">\n              <FormControl isInvalid={!!errors?.siteMetadata?.title}>\n                <FormLabel>Title</FormLabel>\n                <Input\n                  placeholder=\"Title\"\n                  {...register('siteMetadata.title', {\n                    maxLength: {value: 100, message: 'Title is too long'}\n                  })}\n                />\n                <FormErrorMessage>\n                  {errors.siteMetadata?.title?.message}\n                </FormErrorMessage>\n              </FormControl>\n\n              <FormControl isInvalid={!!errors?.siteMetadata?.siteUrl}>\n                <FormLabel>URL</FormLabel>\n                <Input\n                  placeholder=\"https://snek.at\"\n                  {...register('siteMetadata.siteUrl', {\n                    validate: {\n                      checkUrl: value =>\n                        value && !/^https?:\\/\\//.test(value)\n                          ? 'URL must start with http:// or https://'\n                          : undefined\n                    }\n                  })}\n                />\n                <FormErrorMessage>\n                  {errors.siteMetadata?.siteUrl?.message}\n                </FormErrorMessage>\n              </FormControl>\n\n              <FormControl isInvalid={!!errors?.siteMetadata?.description}>\n                <FormLabel>Description</FormLabel>\n                <Textarea\n                  rows={5}\n                  placeholder=\"The description that appears in search engines and social media.\"\n                  {...register('siteMetadata.description')}\n                />\n                {!errors.siteMetadata?.description && (\n                  <FormHelperText>\n                    Brief description for your site.\n                  </FormHelperText>\n                )}\n\n                <FormErrorMessage>\n                  {errors.siteMetadata?.description?.message}\n                </FormErrorMessage>\n              </FormControl>\n\n              <FormControl id=\"image\">\n                <FormLabel>Image</FormLabel>\n\n                <Controller\n                  control={control}\n                  name=\"siteMetadata.image\"\n                  render={({field: {value}}) => {\n                    return (\n                      <FormMediaChooser\n                        value={value}\n                        onChoose={media => {\n                          setValue('siteMetadata.image', media.url, {\n                            shouldDirty: true\n                          })\n                        }}\n                        onRemove={() => {\n                          setValue('siteMetadata.image', '', {\n                            shouldDirty: true\n                          })\n                        }}\n                        description=\"Upload a photo to represent the site.\"\n                      />\n                    )\n                  }}\n                />\n              </FormControl>\n            </VStack>\n          </FieldGroup>\n\n          <FieldGroup title=\"Organisation\">\n            <VStack width=\"full\" spacing=\"6\">\n              <FormControl\n                isInvalid={!!errors?.siteMetadata?.organization?.name}>\n                <FormLabel>Name</FormLabel>\n                <Input\n                  placeholder=\"Snek\"\n                  {...register('siteMetadata.organization.name', {\n                    maxLength: {value: 100, message: 'Name is too long'}\n                  })}\n                />\n                <FormErrorMessage>\n                  {errors.siteMetadata?.organization?.name?.message}\n                </FormErrorMessage>\n              </FormControl>\n              <FormControl\n                isInvalid={!!errors?.siteMetadata?.organization?.url}>\n                <FormLabel>Url</FormLabel>\n                <Input\n                  placeholder=\"https://snek.at\"\n                  {...register('siteMetadata.organization.url', {\n                    validate: {\n                      checkUrl: value =>\n                        value && !/^https?:\\/\\//.test(value)\n                          ? 'Url must start with http:// or https://'\n                          : undefined\n                    }\n                  })}\n                />\n                <FormErrorMessage>\n                  {errors.siteMetadata?.organization?.url?.message}\n                </FormErrorMessage>\n              </FormControl>\n              <FormControl id=\"image\">\n                <FormLabel>Image</FormLabel>\n\n                <Controller\n                  control={control}\n                  name=\"siteMetadata.organization.logo\"\n                  render={({field: {value}}) => (\n                    <FormMediaChooser\n                      value={value}\n                      onChoose={media => {\n                        setValue('siteMetadata.organization.logo', media.url, {\n                          shouldDirty: true\n                        })\n                      }}\n                      onRemove={() => {\n                        setValue('siteMetadata.organization.logo', '', {\n                          shouldDirty: true\n                        })\n                      }}\n                      description=\"Upload a photo to represent the organization.\"\n                    />\n                  )}\n                />\n              </FormControl>\n            </VStack>\n          </FieldGroup>\n\n          <HStack justifyContent=\"right\">\n            <ButtonGroup>\n              <Button\n                variant=\"outline\"\n                isDisabled={!isDirty}\n                onClick={() => {\n                  reset(undefined, {\n                    keepDirty: false\n                  })\n                }}>\n                Cancel\n              </Button>\n              <Button\n                type=\"submit\"\n                isLoading={isSubmitting}\n                isDisabled={!isDirty}>\n                Save\n              </Button>\n            </ButtonGroup>\n          </HStack>\n        </Stack>\n      </form>\n    </Box>\n  )\n}\n","import {PageProps} from 'gatsby'\nimport {PageConfig, useNotificationsContext} from 'jaen'\n\nimport {FormDataType, Settings} from '../../components/cms/Settings/Settings'\nimport {CMSManagement, useCMSManagement} from '../../connectors/cms-management'\n\nconst SettingsPage: React.FC<PageProps> = () => {\n  const manager = useCMSManagement()\n  const {toast} = useNotificationsContext()\n\n  return (\n    <Settings\n      data={{siteMetadata: manager.siteMetadata}}\n      onUpdate={({siteMetadata}: FormDataType) => {\n        manager.updateSiteMetadata(siteMetadata || {})\n\n        toast({\n          title: 'Settings updated',\n          status: 'success'\n        })\n      }}\n    />\n  )\n}\n\nconst Page: React.FC<PageProps> = props => {\n  return (\n    <CMSManagement>\n      <SettingsPage {...props} />\n    </CMSManagement>\n  )\n}\n\nexport default Page\n\nexport const pageConfig: PageConfig = {\n  label: 'Jaen CMS | Settings',\n  icon: 'FaCog',\n  menu: {\n    label: 'Settings',\n    type: 'app',\n    group: 'cms',\n    order: 400\n  },\n\n  breadcrumbs: [\n    {\n      label: 'CMS',\n      path: '/cms/'\n    },\n    {\n      label: 'Settings',\n      path: '/cms/settings/'\n    }\n  ],\n  withoutJaenFrameStickyHeader: true,\n  auth: {\n    isAdminRequired: true\n  },\n  layout: {\n    name: 'jaen'\n  }\n}\n\nexport {Head} from 'jaen'\n","'use client'\n\n// src/stack/stack-divider.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar StackDivider = (props) => /* @__PURE__ */ jsx(\n  chakra.div,\n  {\n    className: \"chakra-stack__divider\",\n    ...props,\n    __css: {\n      ...props[\"__css\"],\n      borderWidth: 0,\n      alignSelf: \"stretch\",\n      borderColor: \"inherit\",\n      width: \"auto\",\n      height: \"auto\"\n    }\n  }\n);\nStackDivider.displayName = \"StackDivider\";\n\nexport {\n  StackDivider\n};\n//# sourceMappingURL=chunk-KTD65HY5.mjs.map","'use client'\nimport {\n  useIsFirstRender\n} from \"./chunk-AASO4CLC.mjs\";\n\n// src/skeleton.tsx\nimport { usePrevious } from \"@chakra-ui/react-use-previous\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  chakra,\n  cssVar,\n  forwardRef,\n  keyframes,\n  omitThemingProps,\n  useStyleConfig,\n  useToken\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar StyledSkeleton = chakra(\"div\", {\n  baseStyle: {\n    boxShadow: \"none\",\n    backgroundClip: \"padding-box\",\n    cursor: \"default\",\n    color: \"transparent\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n    \"&::before, &::after, *\": {\n      visibility: \"hidden\"\n    }\n  }\n});\nvar $startColor = cssVar(\"skeleton-start-color\");\nvar $endColor = cssVar(\"skeleton-end-color\");\nvar fade = keyframes({\n  from: { opacity: 0 },\n  to: { opacity: 1 }\n});\nvar bgFade = keyframes({\n  from: {\n    borderColor: $startColor.reference,\n    background: $startColor.reference\n  },\n  to: {\n    borderColor: $endColor.reference,\n    background: $endColor.reference\n  }\n});\nvar Skeleton = forwardRef((props, ref) => {\n  const skeletonProps = {\n    ...props,\n    fadeDuration: typeof props.fadeDuration === \"number\" ? props.fadeDuration : 0.4,\n    speed: typeof props.speed === \"number\" ? props.speed : 0.8\n  };\n  const styles = useStyleConfig(\"Skeleton\", skeletonProps);\n  const isFirstRender = useIsFirstRender();\n  const {\n    startColor = \"\",\n    endColor = \"\",\n    isLoaded,\n    fadeDuration,\n    speed,\n    className,\n    fitContent,\n    ...rest\n  } = omitThemingProps(skeletonProps);\n  const [startColorVar, endColorVar] = useToken(\"colors\", [\n    startColor,\n    endColor\n  ]);\n  const wasPreviouslyLoaded = usePrevious(isLoaded);\n  const _className = cx(\"chakra-skeleton\", className);\n  const cssVarStyles = {\n    ...startColorVar && { [$startColor.variable]: startColorVar },\n    ...endColorVar && { [$endColor.variable]: endColorVar }\n  };\n  if (isLoaded) {\n    const animation = isFirstRender || wasPreviouslyLoaded ? \"none\" : `${fade} ${fadeDuration}s`;\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: _className,\n        __css: { animation },\n        ...rest\n      }\n    );\n  }\n  return /* @__PURE__ */ jsx(\n    StyledSkeleton,\n    {\n      ref,\n      className: _className,\n      ...rest,\n      __css: {\n        width: fitContent ? \"fit-content\" : void 0,\n        ...styles,\n        ...cssVarStyles,\n        _dark: { ...styles[\"_dark\"], ...cssVarStyles },\n        animation: `${speed}s linear infinite alternate ${bgFade}`\n      }\n    }\n  );\n});\nSkeleton.displayName = \"Skeleton\";\n\nexport {\n  Skeleton\n};\n//# sourceMappingURL=chunk-GOJLRND4.mjs.map","'use client'\n\n// src/use-is-first-render.ts\nimport { useEffect, useRef } from \"react\";\nfunction useIsFirstRender() {\n  const isFirstRender = useRef(true);\n  useEffect(() => {\n    isFirstRender.current = false;\n  }, []);\n  return isFirstRender.current;\n}\n\nexport {\n  useIsFirstRender\n};\n//# sourceMappingURL=chunk-AASO4CLC.mjs.map","'use client'\n\n// src/index.ts\nimport { useRef, useEffect } from \"react\";\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\nexport {\n  usePrevious\n};\n//# sourceMappingURL=index.mjs.map","'use client'\n\n// src/textarea.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\n\n// ../../utilities/object-utils/src/omit.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key];\n    }\n  }\n  return clone;\n}\n\n// src/textarea.tsx\nimport { jsx } from \"react/jsx-runtime\";\nvar omitted = [\"h\", \"minH\", \"height\", \"minHeight\"];\nvar Textarea = forwardRef((props, ref) => {\n  const styles = useStyleConfig(\"Textarea\", props);\n  const { className, rows, ...rest } = omitThemingProps(props);\n  const textareaProps = useFormControl(rest);\n  const textareaStyles = rows ? omit(styles, omitted) : styles;\n  return /* @__PURE__ */ jsx(\n    chakra.textarea,\n    {\n      ref,\n      rows,\n      ...textareaProps,\n      className: cx(\"chakra-textarea\", className),\n      __css: textareaStyles\n    }\n  );\n});\nTextarea.displayName = \"Textarea\";\n\nexport {\n  Textarea\n};\n//# sourceMappingURL=chunk-4IH3O7BJ.mjs.map"],"names":["FieldGroup","props","title","children","flexProps","_jsxs","Stack","direction","base","md","spacing","py","_jsx","Box","minW","Heading","as","fontWeight","fontSize","flexShrink","CMSManagement","staticData","useStaticQuery","CMSManagementProvider","staticPages","allJaenPage","nodes","templates","allJaenTemplate","withCMSManagement","Component","FormMediaChooser","isLoading","setIsLoading","useState","align","width","boxSize","borderRadius","bg","value","Image","src","fallback","Skeleton","Center","Text","color","HStack","Button","variant","leftIcon","FaCloudUploadAlt","onClick","async","onChoose","e","onRemove","mt","description","context","useMediaModal","onSelect","media","toggleModal","Settings","_ref","_errors$siteMetadata","_errors$siteMetadata2","_errors$siteMetadata3","_errors$siteMetadata4","_errors$siteMetadata5","_errors$siteMetadata6","_errors$siteMetadata7","_errors$siteMetadata8","_errors$siteMetadata9","_errors$siteMetadata10","_errors$siteMetadata11","_errors$siteMetadata12","_errors$siteMetadata13","_errors$siteMetadata14","_errors$siteMetadata15","_errors$siteMetadata16","_errors$siteMetadata17","_errors$siteMetadata18","_errors$siteMetadata19","_errors$siteMetadata20","data","onUpdate","defaultValues","setDefaultValues","React","register","reset","handleSubmit","setValue","control","getValues","formState","errors","isSubmitting","isDirty","useForm","onSubmit","values","useEffect","siteMetadata","Object","keys","length","console","log","id","divider","StackDivider","px","size","VStack","FormControl","isInvalid","FormLabel","Input","placeholder","maxLength","message","FormErrorMessage","siteUrl","validate","checkUrl","test","undefined","Textarea","rows","FormHelperText","Controller","name","render","_ref2","field","url","shouldDirty","organization","_ref3","justifyContent","ButtonGroup","isDisabled","keepDirty","type","SettingsPage","manager","useCMSManagement","toast","useNotificationsContext","updateSiteMetadata","status","pageConfig","label","icon","menu","group","order","breadcrumbs","path","withoutJaenFrameStickyHeader","auth","isAdminRequired","layout","jsx","div","className","__css","borderWidth","alignSelf","borderColor","height","displayName","StyledSkeleton","baseStyle","boxShadow","backgroundClip","cursor","pointerEvents","userSelect","visibility","$startColor","$endColor","fade","from","opacity","to","bgFade","reference","background","ref","skeletonProps","fadeDuration","speed","styles","isFirstRender","useRef","current","useIsFirstRender","startColor","endColor","isLoaded","fitContent","rest","startColorVar","endColorVar","wasPreviouslyLoaded","usePrevious","_className","cx","cssVarStyles","variable","animation","_dark","omitted","textareaProps","textareaStyles","object","keysToOmit","clone","assign","key","omit","textarea"],"sourceRoot":""}