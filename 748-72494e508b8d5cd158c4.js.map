{"version":3,"file":"748-72494e508b8d5cd158c4.js","mappings":"4MAsEA,UAnDiDA,IAC/C,MAAMC,GAAUC,EAAAA,EAAAA,OAEV,EAACC,EAAS,EAACC,IAAeC,EAAAA,EAAAA,UAI9B,CACAC,GAAI,yBAkBN,OAfAC,EAAAA,EAAAA,YAAU,KAUJN,EAAQO,QATDC,WAET,MAAMC,QAAaC,MAAM,uCAEnBC,QAAaF,EAAKE,OAExBR,EAAYQ,EAAKC,OAAOH,KAAKP,SAAqB,EAIlDW,EACF,GACC,CAACb,EAAQO,UAGVO,EAAAA,EAAAA,IAACC,EAAAA,GAAK,CAACR,OAAQP,EAAQO,OAAQS,QAAShB,EAAQiB,YAAYC,SAAA,EAC1DC,EAAAA,EAAAA,IAACC,EAAAA,EAAY,KACbN,EAAAA,EAAAA,IAACO,EAAAA,EAAY,CACXC,KAAK,QACLC,eAAgB,CACdlB,GAAI,QACJa,SAAA,EAEFC,EAAAA,EAAAA,IAACK,EAAAA,EAAgB,KACjBL,EAAAA,EAAAA,IAACM,EAAAA,EAAS,CAACC,EAAE,IAAGR,UACdC,EAAAA,EAAAA,IAACQ,EAAAA,GAAY,CAACzB,SAAUA,EAASgB,UAC/BC,EAAAA,EAAAA,IAACS,EAAAA,EAAK,CACJC,WAAY9B,EAAM8B,WAClBC,SAAU/B,EAAM+B,SAChBC,gBAAiBhC,EAAMgC,gBACvBC,WAAYjC,EAAMiC,sBAKpB,C,4GCvDRR,GAAmB,QACrB,CAACzB,EAAOkC,KACN,MAAM,QAAEC,EAAO,UAAEC,KAAcC,GAASrC,GAClC,QAAEiB,IAAY,UACdqB,GAAa,IAAAC,IAAG,0BAA2BH,GAC3CI,GAAS,UACf,OAAuB,IAAAC,KACrB,IACA,CACEP,MACAQ,MAAOF,EAAOG,YACdP,UAAWE,EACXH,SAAS,QAAgBA,GAAUS,IACjCA,EAAMC,kBACN5B,GAAS,OAERoB,GAEN,IAGLZ,EAAiBqB,YAAc,kB","sources":["webpack://photonq/../packages/gatsby-plugin-jaen/src/containers/media-modal.tsx","webpack://photonq/../node_modules/@chakra-ui/modal/dist/chunk-JQL44AUU.mjs"],"sourcesContent":["import {\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalOverlay\n} from '@chakra-ui/react'\nimport {JaenPage, MediaNode, PageProvider, useMediaModal} from 'jaen'\nimport {useEffect, useState} from 'react'\n\nimport Media from './media'\n\nexport interface MediaSelectorProps {\n  isSelector?: boolean\n  defaultSelected?: string\n  jaenPageId?: string\n  onSelect: (mediaNode: MediaNode) => void\n}\n\nconst MediaModal: React.FC<MediaSelectorProps> = props => {\n  const context = useMediaModal()\n\n  const [jaenPage, setJaenPage] = useState<\n    {\n      id: string\n    } & Partial<JaenPage>\n  >({\n    id: 'JaenPage /cms/media/'\n  })\n\n  useEffect(() => {\n    const fn = async () => {\n      // load jaenPage\n      const data = await fetch('/page-data/cms/media/page-data.json')\n\n      const json = await data.json()\n\n      setJaenPage(json.result.data.jaenPage as JaenPage)\n    }\n\n    if (context.isOpen) {\n      fn()\n    }\n  }, [context.isOpen])\n\n  return (\n    <Modal isOpen={context.isOpen} onClose={context.toggleModal}>\n      <ModalOverlay />\n      <ModalContent\n        maxW=\"96rem\"\n        containerProps={{\n          id: 'coco'\n        }}>\n        {/* <ModalHeader>Modal Title</ModalHeader> */}\n        <ModalCloseButton />\n        <ModalBody p=\"1\">\n          <PageProvider jaenPage={jaenPage}>\n            <Media\n              isSelector={props.isSelector}\n              onSelect={props.onSelect}\n              defaultSelected={props.defaultSelected}\n              jaenPageId={props.jaenPageId}\n            />\n          </PageProvider>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nexport default MediaModal\n","'use client'\nimport {\n  useModalContext,\n  useModalStyles\n} from \"./chunk-YEXLRKHC.mjs\";\n\n// src/modal-close-button.tsx\nimport { CloseButton } from \"@chakra-ui/close-button\";\nimport { cx, callAllHandlers } from \"@chakra-ui/shared-utils\";\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar ModalCloseButton = forwardRef(\n  (props, ref) => {\n    const { onClick, className, ...rest } = props;\n    const { onClose } = useModalContext();\n    const _className = cx(\"chakra-modal__close-btn\", className);\n    const styles = useModalStyles();\n    return /* @__PURE__ */ jsx(\n      CloseButton,\n      {\n        ref,\n        __css: styles.closeButton,\n        className: _className,\n        onClick: callAllHandlers(onClick, (event) => {\n          event.stopPropagation();\n          onClose();\n        }),\n        ...rest\n      }\n    );\n  }\n);\nModalCloseButton.displayName = \"ModalCloseButton\";\n\nexport {\n  ModalCloseButton\n};\n//# sourceMappingURL=chunk-JQL44AUU.mjs.map"],"names":["props","context","useMediaModal","jaenPage","setJaenPage","useState","id","useEffect","isOpen","async","data","fetch","json","result","fn","_jsxs","Modal","onClose","toggleModal","children","_jsx","ModalOverlay","ModalContent","maxW","containerProps","ModalCloseButton","ModalBody","p","PageProvider","Media","isSelector","onSelect","defaultSelected","jaenPageId","ref","onClick","className","rest","_className","cx","styles","jsx","__css","closeButton","event","stopPropagation","displayName"],"sourceRoot":""}