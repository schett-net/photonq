{"version":3,"file":"component---packages-gatsby-plugin-jaen-src-pages-cms-index-tsx-17861c361aee8b32a8f5.js","mappings":"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","sources":["webpack://photonq/../packages/gatsby-plugin-jaen/src/connectors/cms-management.tsx","webpack://photonq/../node_modules/@chakra-ui/card/dist/chunk-2EW3JUUD.mjs","webpack://photonq/../packages/gatsby-plugin-jaen/src/components/shared/components/List/List.tsx","webpack://photonq/../packages/gatsby-plugin-jaen/src/components/shared/components/List/ListItem.tsx","webpack://photonq/../packages/gatsby-plugin-jaen/src/components/cms/Dashboard/Dashboard.tsx","webpack://photonq/../packages/gatsby-plugin-jaen/src/pages/cms/index.tsx","webpack://photonq/../node_modules/@chakra-ui/card/dist/chunk-FHHZMTWR.mjs","webpack://photonq/../node_modules/@chakra-ui/card/dist/chunk-HAZMUPV3.mjs","webpack://photonq/../node_modules/@chakra-ui/card/dist/chunk-YQO7BFFX.mjs","webpack://photonq/../node_modules/@chakra-ui/layout/dist/chunk-2N6VWMFO.mjs","webpack://photonq/../node_modules/@chakra-ui/layout/dist/chunk-46CXQZ4E.mjs","webpack://photonq/../node_modules/@chakra-ui/layout/dist/chunk-7OLJDQMT.mjs"],"sourcesContent":["import {CMSManagementProvider, JaenPage, JaenTemplate} from 'jaen'\nimport {graphql, useStaticQuery} from 'gatsby'\n\nexport {useCMSManagementContext as useCMSManagement} from 'jaen'\n\nexport interface CMSManagementProps {\n  children: React.ReactNode\n}\n\nexport const CMSManagement: React.FC<CMSManagementProps> = props => {\n  const staticData = useStaticQuery<{\n    allJaenPage: {\n      nodes: JaenPage[]\n    }\n    allJaenTemplate: {\n      nodes: JaenTemplate[]\n    }\n  }>(graphql`\n    query CMSManagementData {\n      allJaenPage {\n        nodes {\n          ...JaenPageData\n        }\n      }\n      allJaenTemplate {\n        nodes {\n          ...JaenTemplateData\n        }\n      }\n    }\n  `)\n\n  return (\n    <CMSManagementProvider\n      staticPages={staticData.allJaenPage.nodes}\n      templates={staticData.allJaenTemplate.nodes}>\n      {props.children}\n    </CMSManagementProvider>\n  )\n}\n\nexport const withCMSManagement = <P extends object>(\n  Component: React.ComponentType<P>\n): React.FC<P> => {\n  const WithCMSManagement: React.FC<P> = props => {\n    return (\n      <CMSManagement>\n        <Component {...props} />\n      </CMSManagement>\n    )\n  }\n\n  return WithCMSManagement\n}\n","'use client'\nimport {\n  useCardStyles\n} from \"./chunk-HAZMUPV3.mjs\";\n\n// src/card-header.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { forwardRef, chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar CardHeader = forwardRef(\n  function CardHeader2(props, ref) {\n    const { className, ...rest } = props;\n    const styles = useCardStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: cx(\"chakra-card__header\", className),\n        __css: styles.header,\n        ...rest\n      }\n    );\n  }\n);\n\nexport {\n  CardHeader\n};\n//# sourceMappingURL=chunk-2EW3JUUD.mjs.map","import {\n  Box,\n  Card,\n  CardBody,\n  CardHeader,\n  Stack,\n  StackProps,\n  Text\n} from '@chakra-ui/react'\nimport * as React from 'react'\n\nimport type {ListItemProps} from './ListItem'\n\nexport interface ListProps extends StackProps {\n  label?: string\n}\n\nexport const List: React.FC<ListProps> = props => {\n  const {children, label, ...stackProps} = props\n  const items = React.useMemo(\n    () =>\n      React.Children.toArray(children)\n        .filter<React.ReactElement<ListItemProps>>(React.isValidElement)\n        .map((item, index, array) =>\n          index + 1 === array.length\n            ? React.cloneElement(item, {isLastItem: true})\n            : item\n        ),\n    [children]\n  )\n  return (\n    <Card variant=\"outline\">\n      <CardHeader>\n        {label && (\n          <Text noOfLines={1} pb=\"1\">\n            {label}\n          </Text>\n        )}\n      </CardHeader>\n      <CardBody>\n        <Stack as=\"ul\" {...stackProps}>\n          {items}\n        </Stack>\n      </CardBody>\n    </Card>\n  )\n}\n","import {\n  Circle,\n  Flex,\n  Heading,\n  Stack,\n  StackProps,\n  Text,\n  useColorModeValue\n} from '@chakra-ui/react'\n\nexport interface ListItemProps extends StackProps {\n  title: string\n  subTitle: string\n  circleColor: string\n  icon?: React.ReactElement\n  isLastItem?: boolean\n}\n\nexport const ListItem: React.FC<ListItemProps> = props => {\n  const {\n    title,\n    subTitle,\n    circleColor,\n    icon,\n    isLastItem,\n    children,\n    ...stackProps\n  } = props\n\n  return (\n    <Stack as=\"li\" direction=\"row\" spacing=\"4\" {...stackProps}>\n      <Flex direction=\"column\" alignItems=\"center\" aria-hidden=\"true\">\n        <Circle\n          bg={circleColor}\n          size=\"12\"\n          borderWidth=\"1px\"\n          color=\"fg.inverted\"\n          borderColor=\"border.emphasized\">\n          {icon}\n        </Circle>\n        {!isLastItem && (\n          <Flex\n            flex=\"1\"\n            borderRightWidth=\"1px\"\n            mb=\"-12\"\n            borderColor=\"border.emphasized\"\n          />\n        )}\n      </Flex>\n      <Stack spacing=\"4\" pt=\"1\" flex=\"1\">\n        <Stack>\n          <Text fontSize=\"md\" fontWeight=\"semibold\">\n            {title}\n          </Text>\n          <Text fontSize=\"sm\">{subTitle}</Text>\n        </Stack>\n        <Flex>{children}</Flex>\n      </Stack>\n    </Stack>\n  )\n}\n","import {\n  Card,\n  CardBody,\n  CardHeader,\n  Heading,\n  HStack,\n  Icon,\n  ListItem as ChakraListItem,\n  SimpleGrid,\n  Stack,\n  Text,\n  UnorderedList\n} from '@chakra-ui/react'\nimport {FaBullhorn, FaRocket} from 'react-icons/fa'\n\nimport {List, ListItem} from '../../shared/components/List'\n\nexport interface DashboardProps {\n  user?: string\n  isPublishing?: boolean\n  patches: Array<{\n    createdAt: string\n    url: string\n    title: string\n  }>\n}\n\nexport const Dashboard: React.FC<DashboardProps> = props => {\n  return (\n    <Stack spacing=\"12\">\n      <Heading size=\"sm\">\n        {props.user ? (\n          <>\n            Welcome back, <Text as=\"span\">{props.user}</Text>!\n          </>\n        ) : (\n          'Welcome'\n        )}\n      </Heading>\n\n      <Stack spacing=\"4\">\n        <SimpleGrid\n          columns={{\n            base: 1,\n            md: 2\n          }}\n          spacing=\"4\">\n          <Card>\n            <CardHeader>\n              <HStack>\n                <Icon as={FaBullhorn} boxSize={6} color=\"brand.500\" /> What is\n                Jaen\n                <Text>What is Jaen CMS?</Text>\n              </HStack>\n            </CardHeader>\n            <CardBody>\n              <Text>\n                Jaen CMS is a friendly tool that helps you create and manage\n                websites easily, without any technical knowledge required. It\n                lets you add and edit content, like text and images, to your\n                website without worrying about the technical stuff. It's like\n                writing a document and seeing it on your website instantly!\n              </Text>\n            </CardBody>\n          </Card>\n          <Card>\n            <CardHeader>\n              <HStack>\n                <Icon as={FaRocket} boxSize={6} color=\"brand.500\" />{' '}\n                <Text>Key Features</Text>\n              </HStack>\n            </CardHeader>\n            <CardBody>\n              <UnorderedList styleType=\"disc\" pl=\"1.5rem\" spacing={3}>\n                <ChakraListItem>\n                  Easy to Use: Jaen CMS is designed with simplicity in mind. You\n                  don't need to be a techie to use it. Just start creating!\n                </ChakraListItem>\n                <ChakraListItem>\n                  Instant Preview: See how your changes look on your website in\n                  real-time before publishing. No waiting or guessing!\n                </ChakraListItem>\n                <ChakraListItem>\n                  Safe Editing: Don't worry about making mistakes. Jaen CMS\n                  keeps track of your changes, so you can always go back to a\n                  previous version if needed.\n                </ChakraListItem>\n                <ChakraListItem>\n                  Beautiful Images: Easily add and manage images to make your\n                  website visually stunning and engaging.\n                </ChakraListItem>\n                <ChakraListItem>\n                  Better SEO: Improve your website's visibility in search\n                  engines with built-in tools to optimize your content for\n                  search results.\n                </ChakraListItem>\n              </UnorderedList>\n            </CardBody>\n          </Card>\n        </SimpleGrid>\n      </Stack>\n\n      <List spacing=\"12\" overflowY=\"auto\" label=\"Previouse releases\">\n        {props.isPublishing && (\n          <ListItem\n            title=\"In progress\"\n            subTitle=\"Your website will be live in a few minutes.\"\n            circleColor=\"orange.500\"\n            icon={<Icon as={FaRocket} boxSize=\"6\" />}\n          />\n        )}\n\n        {props.patches.map((m, i) => (\n          <ListItem\n            key={i}\n            title={m.title}\n            subTitle={`Published on ${new Date(m.createdAt).toLocaleString()}`}\n            circleColor=\"green.500\"\n            icon={<Icon as={FaRocket} boxSize=\"6\" />}\n            isLastItem={i === props.patches.length - 1}\n          />\n        ))}\n      </List>\n    </Stack>\n  )\n}\n","import {PageConfig, useAuthenticationContext} from 'jaen'\nimport {graphql, PageProps, useStaticQuery} from 'gatsby'\n\nimport {CMSManagement, useCMSManagement} from '../../connectors/cms-management'\nimport {Dashboard} from '../../components/cms/Dashboard'\nimport {JaenPageLayout} from '../../components/JaenPageLayout/JaenPageLayout'\nimport {useEffect} from 'react'\n\nconst DashboardPage: React.FC<PageProps> = () => {\n  const authentication = useAuthenticationContext()\n\n  const manager = useCMSManagement()\n\n  const {\n    jaenData: {patches}\n  } = useStaticQuery<{\n    jaenData: {\n      patches: Array<{\n        createdAt: string\n        url: string\n        title: string\n      }>\n    }\n  }>(graphql`\n    query {\n      jaenData {\n        patches {\n          createdAt\n          url\n          title\n        }\n      }\n    }\n  `)\n\n  const user =\n    authentication.user?.details?.firstName || authentication.user?.username\n\n  return (\n    <Dashboard\n      user={user}\n      isPublishing={manager.isPublishing}\n      patches={patches}\n    />\n  )\n}\n\nconst Page: React.FC<PageProps> = props => {\n  return (\n    <CMSManagement>\n      <DashboardPage {...props} />\n    </CMSManagement>\n  )\n}\n\nexport default Page\n\nexport const pageConfig: PageConfig = {\n  label: 'Jaen CMS',\n  icon: 'FaTachometerAlt',\n  menu: {\n    type: 'app',\n    group: 'cms',\n    label: 'Dashboard',\n    groupLabel: 'Jaen CMS',\n    order: 100\n  },\n  breadcrumbs: [\n    {\n      label: 'CMS',\n      path: '/cms/'\n    }\n  ],\n  withoutJaenFrameStickyHeader: true,\n  auth: {\n    isAdminRequired: true\n  },\n  layout: {\n    name: 'jaen'\n  }\n}\n\nexport {Head} from 'jaen'\n","'use client'\nimport {\n  useCardStyles\n} from \"./chunk-HAZMUPV3.mjs\";\n\n// src/card-body.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { forwardRef, chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar CardBody = forwardRef(function CardBody2(props, ref) {\n  const { className, ...rest } = props;\n  const styles = useCardStyles();\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-card__body\", className),\n      __css: styles.body,\n      ...rest\n    }\n  );\n});\n\nexport {\n  CardBody\n};\n//# sourceMappingURL=chunk-FHHZMTWR.mjs.map","'use client'\n\n// src/card-context.tsx\nimport { createStylesContext } from \"@chakra-ui/system\";\nvar [CardStylesProvider, useCardStyles] = createStylesContext(\"Card\");\n\nexport {\n  CardStylesProvider,\n  useCardStyles\n};\n//# sourceMappingURL=chunk-HAZMUPV3.mjs.map","'use client'\nimport {\n  CardStylesProvider\n} from \"./chunk-HAZMUPV3.mjs\";\n\n// src/card.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  forwardRef,\n  chakra,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Card = forwardRef(function Card2(props, ref) {\n  const {\n    className,\n    children,\n    direction = \"column\",\n    justify,\n    align,\n    ...rest\n  } = omitThemingProps(props);\n  const styles = useMultiStyleConfig(\"Card\", props);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-card\", className),\n      __css: {\n        display: \"flex\",\n        flexDirection: direction,\n        justifyContent: justify,\n        alignItems: align,\n        position: \"relative\",\n        minWidth: 0,\n        wordWrap: \"break-word\",\n        ...styles.container\n      },\n      ...rest,\n      children: /* @__PURE__ */ jsx(CardStylesProvider, { value: styles, children })\n    }\n  );\n});\n\nexport {\n  Card\n};\n//# sourceMappingURL=chunk-YQO7BFFX.mjs.map","'use client'\nimport {\n  Grid\n} from \"./chunk-JARCRF6W.mjs\";\n\n// src/simple-grid.tsx\nimport {\n  forwardRef,\n  getToken,\n  useTheme\n} from \"@chakra-ui/system\";\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar SimpleGrid = forwardRef(\n  function SimpleGrid2(props, ref) {\n    const { columns, spacingX, spacingY, spacing, minChildWidth, ...rest } = props;\n    const theme = useTheme();\n    const templateColumns = minChildWidth ? widthToColumns(minChildWidth, theme) : countToColumns(columns);\n    return /* @__PURE__ */ jsx(\n      Grid,\n      {\n        ref,\n        gap: spacing,\n        columnGap: spacingX,\n        rowGap: spacingY,\n        templateColumns,\n        ...rest\n      }\n    );\n  }\n);\nSimpleGrid.displayName = \"SimpleGrid\";\nfunction toPx(n) {\n  return typeof n === \"number\" ? `${n}px` : n;\n}\nfunction widthToColumns(width, theme) {\n  return mapResponsive(width, (value) => {\n    const _value = getToken(\"sizes\", value, toPx(value))(theme);\n    return value === null ? null : `repeat(auto-fit, minmax(${_value}, 1fr))`;\n  });\n}\nfunction countToColumns(count) {\n  return mapResponsive(\n    count,\n    (value) => value === null ? null : `repeat(${value}, minmax(0, 1fr))`\n  );\n}\n\nexport {\n  SimpleGrid\n};\n//# sourceMappingURL=chunk-2N6VWMFO.mjs.map","'use client'\n\n// src/list.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [ListStylesProvider, useListStyles] = createContext({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `\n});\nvar List = forwardRef(function List2(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props);\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props);\n  const validChildren = getValidChildren(children);\n  const selector = \"& > *:not(style) ~ *:not(style)\";\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {};\n  return /* @__PURE__ */ jsx(ListStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.ul,\n    {\n      ref,\n      listStyleType: styleType,\n      listStylePosition: stylePosition,\n      role: \"list\",\n      __css: { ...styles.container, ...spacingStyle },\n      ...rest,\n      children: validChildren\n    }\n  ) });\n});\nList.displayName = \"List\";\nvar OrderedList = forwardRef((props, ref) => {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ol\", styleType: \"decimal\", marginStart: \"1em\", ...rest });\n});\nOrderedList.displayName = \"OrderedList\";\nvar UnorderedList = forwardRef(function UnorderedList2(props, ref) {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ul\", styleType: \"initial\", marginStart: \"1em\", ...rest });\n});\nUnorderedList.displayName = \"UnorderedList\";\nvar ListItem = forwardRef(function ListItem2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(chakra.li, { ref, ...props, __css: styles.item });\n});\nListItem.displayName = \"ListItem\";\nvar ListIcon = forwardRef(function ListIcon2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(Icon, { ref, role: \"presentation\", ...props, __css: styles.icon });\n});\nListIcon.displayName = \"ListIcon\";\n\nexport {\n  useListStyles,\n  List,\n  OrderedList,\n  UnorderedList,\n  ListItem,\n  ListIcon\n};\n//# sourceMappingURL=chunk-46CXQZ4E.mjs.map","'use client'\n\n// src/heading.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Heading = forwardRef(function Heading2(props, ref) {\n  const styles = useStyleConfig(\"Heading\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.h2,\n    {\n      ref,\n      className: cx(\"chakra-heading\", props.className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nHeading.displayName = \"Heading\";\n\nexport {\n  Heading\n};\n//# sourceMappingURL=chunk-7OLJDQMT.mjs.map"],"names":["CMSManagement","props","staticData","useStaticQuery","_jsx","CMSManagementProvider","staticPages","allJaenPage","nodes","templates","allJaenTemplate","children","withCMSManagement","Component","CardHeader","ref","className","rest","styles","jsx","div","cx","__css","header","List","label","stackProps","items","React","toArray","filter","map","item","index","array","length","isLastItem","_jsxs","Card","variant","Text","noOfLines","pb","CardBody","Stack","as","ListItem","title","subTitle","circleColor","icon","direction","spacing","Flex","alignItems","Circle","bg","size","borderWidth","color","borderColor","flex","borderRightWidth","mb","pt","fontSize","fontWeight","Dashboard","Heading","user","_Fragment","SimpleGrid","columns","base","md","HStack","Icon","FaBullhorn","boxSize","FaRocket","UnorderedList","styleType","pl","ChakraListItem","overflowY","isPublishing","patches","m","i","Date","createdAt","toLocaleString","DashboardPage","_authentication$user","_authentication$user$","_authentication$user2","authentication","useAuthenticationContext","manager","useCMSManagement","jaenData","details","firstName","username","pageConfig","menu","type","group","groupLabel","order","breadcrumbs","path","withoutJaenFrameStickyHeader","auth","isAdminRequired","layout","name","body","CardStylesProvider","useCardStyles","justify","align","display","flexDirection","justifyContent","position","minWidth","wordWrap","container","value","spacingX","spacingY","minChildWidth","theme","templateColumns","width","_value","n","widthToColumns","count","gap","columnGap","rowGap","displayName","ListStylesProvider","useListStyles","errorMessage","stylePosition","validChildren","spacingStyle","mt","ul","listStyleType","listStylePosition","role","marginStart","li","h2"],"sourceRoot":""}